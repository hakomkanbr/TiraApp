{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'antd/dist/antd.css';\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport '../styles/globals.scss';\nimport LayoutAdmin from '../layout/admin/index';\nimport { Provider } from \"react-redux\";\nimport { store } from \"../redux/store\";\nimport { ConfigProvider } from 'antd';\nimport { useRouter } from 'next/router';\nimport LayoutWeb from '../layout/web';\nimport { useEffect } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nconst admin = [\"/admin\"];\nconst notLayout = [\"/login\"];\n\nconst ChangeLayout = ({\n  children\n}) => {\n  const router = useRouter();\n  useEffect(() => {// login controller\n    // let isAuthed = isAuthorization();\n    // if (!isAuthed && router.pathname.includes(admin)) {\n    //   router.push(\"/login\");\n    // }\n  });\n\n  if (router.pathname.includes(admin)) {\n    return /*#__PURE__*/_jsx(LayoutAdmin, {\n      children: children\n    });\n  } else if (router.pathname.includes(notLayout)) {\n    return /*#__PURE__*/_jsx(_Fragment, {\n      children: children\n    });\n  } else {\n    return /*#__PURE__*/_jsx(LayoutWeb, {\n      children: children\n    });\n  }\n};\n\nfunction MyApp({\n  Component,\n  pageProps\n}) {\n  return /*#__PURE__*/_jsx(Provider, {\n    store: store,\n    children: /*#__PURE__*/_jsx(ConfigProvider, {\n      dir: \"ltr\",\n      children: /*#__PURE__*/_jsx(ChangeLayout, {\n        children: /*#__PURE__*/_jsx(Component, _objectSpread({}, pageProps))\n      })\n    })\n  });\n}\n\nexport default MyApp;","map":null,"metadata":{},"sourceType":"module"}