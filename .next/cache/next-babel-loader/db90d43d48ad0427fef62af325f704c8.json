{"ast":null,"code":"import { useDispatch, useSelector } from 'react-redux';\nimport { Layout, Menu } from 'antd';\nimport appActions from '../../../redux/app/actions';\nimport SidebarWrapper from './Sidebar.styles';\nimport Link from \"next/link\";\nimport { AppstoreOutlined } from \"@ant-design/icons\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst {\n  Sider\n} = Layout;\nvar {\n  toggleOpenDrawer,\n  changeOpenKeys,\n  changeCurrent,\n  toggleCollapsed\n} = appActions;\nexport default function Sidebar() {\n  const dispatch = useDispatch();\n  const {\n    view,\n    openKeys,\n    collapsed,\n    openDrawer,\n    current,\n    height\n  } = useSelector(state => state.App); //   const customizedTheme = useSelector(\n  //     state => state.ThemeSwitcher.sidebarTheme\n  //   );\n\n  function handleClick(e) {\n    dispatch(changeCurrent([e.key]));\n\n    if (view === 'MobileView') {\n      setTimeout(() => {\n        dispatch(toggleCollapsed()); // dispatch(toggleOpenDrawer());\n      }, 100); // clearTimeout(timer);\n    }\n  }\n\n  function onOpenChange(newOpenKeys) {\n    const latestOpenKey = newOpenKeys.find(key => !(openKeys.indexOf(key) > -1));\n    console.info(openKeys);\n    const latestCloseKey = openKeys.find(key => !(newOpenKeys.indexOf(key) > -1));\n    let nextOpenKeys = [];\n\n    if (latestOpenKey) {\n      nextOpenKeys = getAncestorKeys(latestOpenKey).concat(latestOpenKey);\n    }\n\n    if (latestCloseKey) {\n      nextOpenKeys = getAncestorKeys(latestCloseKey);\n    }\n\n    dispatch(changeOpenKeys(nextOpenKeys));\n  }\n\n  const getAncestorKeys = key => {\n    const map = {\n      sub3: ['sub2']\n    };\n    return map[key] || [];\n  };\n\n  const isCollapsed = collapsed && !openDrawer;\n  const mode = isCollapsed === true ? 'vertical' : 'inline';\n\n  const onMouseEnter = event => {\n    if (collapsed && openDrawer === false) {\n      dispatch(toggleOpenDrawer());\n    }\n\n    return;\n  };\n\n  const onMouseLeave = () => {\n    if (collapsed && openDrawer === true) {\n      dispatch(toggleOpenDrawer());\n    }\n\n    return;\n  };\n\n  const styling = {\n    backgroundColor: \"#0b0b37\"\n  };\n  const submenuStyle = {\n    backgroundColor: '',\n    color: \"rgb(200 200 200)\"\n  };\n  const submenuColor = {\n    color: \"rgb(200 200 200)\"\n  };\n  return /*#__PURE__*/_jsx(SidebarWrapper, {\n    style: styling,\n    children: /*#__PURE__*/_jsxs(Sider, {\n      trigger: null,\n      collapsible: true,\n      collapsed: isCollapsed,\n      width: 240,\n      className: \"isomorphicSidebar\",\n      onMouseEnter: onMouseEnter,\n      onMouseLeave: onMouseLeave,\n      style: styling,\n      children: [/*#__PURE__*/_jsx(\"h1\", {\n        style: {\n          fontSize: 28,\n          padding: \"20px 0px 0px\",\n          textAlign: \"center\",\n          \"font-family\": \"fantasy\",\n          \"letter-spacing\": \"3px\"\n        },\n        className: \"text-white\",\n        children: !isCollapsed ? /*#__PURE__*/_jsxs(_Fragment, {\n          children: [\"PRINCE \", /*#__PURE__*/_jsx(\"span\", {\n            style: {\n              color: \"red\"\n            },\n            children: \" TIRES \"\n          }), \" \"]\n        }) : \"P\"\n      }), /*#__PURE__*/_jsxs(Menu, {\n        onClick: handleClick,\n        theme: \"dark\",\n        className: \"isoDashboardMenu\",\n        mode: mode // openKeys={isCollapsed ? [] : openKeys}\n        ,\n        selectedKeys: current // onOpenChange={onOpenChange}\n        ,\n        children: [/*#__PURE__*/_jsx(Menu.Item, {\n          children: /*#__PURE__*/_jsx(Link, {\n            href: \"/admin/product\",\n            children: /*#__PURE__*/_jsxs(\"span\", {\n              className: \"isoMenuHolder\",\n              style: submenuColor,\n              children: [/*#__PURE__*/_jsx(AppstoreOutlined, {}), /*#__PURE__*/_jsx(\"span\", {\n                className: \"nav-text\",\n                children: \"product\"\n              })]\n            })\n          })\n        }, 1), /*#__PURE__*/_jsx(Menu.Item, {\n          children: /*#__PURE__*/_jsx(Link, {\n            href: \"/admin/ads\",\n            children: /*#__PURE__*/_jsxs(\"span\", {\n              className: \"isoMenuHolder\",\n              style: submenuColor,\n              children: [/*#__PURE__*/_jsx(AppstoreOutlined, {}), /*#__PURE__*/_jsx(\"span\", {\n                className: \"nav-text\",\n                children: \"ads\"\n              })]\n            })\n          })\n        }, 2), /*#__PURE__*/_jsx(Menu.Item, {\n          children: /*#__PURE__*/_jsx(Link, {\n            href: \"/admin/sitting\",\n            children: /*#__PURE__*/_jsxs(\"span\", {\n              className: \"isoMenuHolder\",\n              style: submenuColor,\n              children: [/*#__PURE__*/_jsx(AppstoreOutlined, {}), /*#__PURE__*/_jsx(\"span\", {\n                className: \"nav-text\",\n                children: \"sitting\"\n              })]\n            })\n          })\n        }, 3), /*#__PURE__*/_jsx(Menu.Item, {\n          children: /*#__PURE__*/_jsx(Link, {\n            href: \"/admin/security\",\n            children: /*#__PURE__*/_jsxs(\"span\", {\n              className: \"isoMenuHolder\",\n              style: submenuColor,\n              children: [/*#__PURE__*/_jsx(AppstoreOutlined, {}), /*#__PURE__*/_jsx(\"span\", {\n                className: \"nav-text\",\n                children: \"security\"\n              })]\n            })\n          })\n        }, 4)]\n      })]\n    })\n  });\n}","map":null,"metadata":{},"sourceType":"module"}