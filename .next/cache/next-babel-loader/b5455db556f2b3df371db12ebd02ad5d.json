{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Abdulhekim abdullah\\\\Desktop\\\\News project\\\\backend\\\\NSiteApi\\\\nextClient\\\\pages\\\\_app.js\";\nimport 'antd/dist/antd.css';\nimport '../styles/globals.css';\nimport LayoutAdmin from '../layout/admin/index';\nimport { Provider } from \"react-redux\";\nimport { store } from \"../redux/store\";\nimport { ConfigProvider } from 'antd';\nimport { useRouter } from 'next/router';\nimport LayoutWeb from '../layout/web';\nconst admin = [\"/admin\"];\nconst notLayout = [\"/login\"];\n\nconst ChangeLayout = ({\n  children\n}) => {\n  const router = useRouter();\n\n  if (admin.includes(router.pathname)) {\n    return /*#__PURE__*/_jsxDEV(LayoutAdmin, {\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this);\n  } else if (notLayout.includes(router.pathname)) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: children\n    }, void 0, false);\n  } else {\n    return /*#__PURE__*/_jsxDEV(LayoutWeb, {\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this);\n  }\n};\n\nfunction MyApp({\n  Component,\n  pageProps\n}) {\n  return /*#__PURE__*/_jsxDEV(Provider, {\n    store: store,\n    children: /*#__PURE__*/_jsxDEV(ConfigProvider, {\n      dir: \"rtl\",\n      children: \"safasd\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\nexport default MyApp;","map":{"version":3,"sources":["C:/Users/Abdulhekim abdullah/Desktop/News project/backend/NSiteApi/nextClient/pages/_app.js"],"names":["LayoutAdmin","Provider","store","ConfigProvider","useRouter","LayoutWeb","admin","notLayout","ChangeLayout","children","router","includes","pathname","MyApp","Component","pageProps"],"mappings":";;;AAAA,OAAO,oBAAP;AACA,OAAO,uBAAP;AACA,OAAOA,WAAP,MAAwB,uBAAxB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SAASC,cAAT,QAA+B,MAA/B;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,SAAP,MAAsB,eAAtB;AAEA,MAAMC,KAAK,GAAG,CAAC,QAAD,CAAd;AAEA,MAAMC,SAAS,GAAG,CAAC,QAAD,CAAlB;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAc;AACjC,QAAMC,MAAM,GAAGN,SAAS,EAAxB;;AAEA,MAAGE,KAAK,CAACK,QAAN,CAAeD,MAAM,CAACE,QAAtB,CAAH,EAAmC;AACjC,wBACE,QAAC,WAAD;AAAA,gBACGH;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAKD,GAND,MAMM,IAAGF,SAAS,CAACI,QAAV,CAAmBD,MAAM,CAACE,QAA1B,CAAH,EAAuC;AAC3C,wBACE;AAAA,gBACGH;AADH,qBADF;AAKD,GANK,MAMD;AACH,wBACE,QAAC,SAAD;AAAA,gBACGA;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;AACF,CAtBD;;AAwBA,SAASI,KAAT,CAAe;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAf,EAAyC;AACvC,sBACE,QAAC,QAAD;AAAU,IAAA,KAAK,EAAEb,KAAjB;AAAA,2BACE,QAAC,cAAD;AAAgB,MAAA,GAAG,EAAC,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;AAED,eAAeW,KAAf","sourcesContent":["import 'antd/dist/antd.css';\r\nimport '../styles/globals.css';\r\nimport LayoutAdmin from '../layout/admin/index';\r\nimport { Provider } from \"react-redux\";\r\nimport { store } from \"../redux/store\";\r\nimport { ConfigProvider } from 'antd';\r\nimport { useRouter } from 'next/router';\r\nimport LayoutWeb from '../layout/web';\r\n\r\nconst admin = [\"/admin\"];\r\n\r\nconst notLayout = [\"/login\"];\r\n\r\nconst ChangeLayout = ({children})=>{\r\n  const router = useRouter();\r\n\r\n  if(admin.includes(router.pathname)){\r\n    return (\r\n      <LayoutAdmin>\r\n        {children}\r\n      </LayoutAdmin>\r\n    )\r\n  }else if(notLayout.includes(router.pathname)){\r\n    return (\r\n      <>\r\n        {children}\r\n      </>\r\n    )\r\n  }else{\r\n    return (\r\n      <LayoutWeb>\r\n        {children}\r\n      </LayoutWeb>\r\n    )\r\n  }\r\n}\r\n\r\nfunction MyApp({ Component, pageProps }) {\r\n  return (\r\n    <Provider store={store}>\r\n      <ConfigProvider dir=\"rtl\">\r\n          safasd\r\n     \r\n      </ConfigProvider>\r\n    </Provider>\r\n  )\r\n}\r\n\r\nexport default MyApp\r\n"]},"metadata":{},"sourceType":"module"}