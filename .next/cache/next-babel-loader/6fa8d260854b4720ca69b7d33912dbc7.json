{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"@babel/runtime/helpers/slicedToArray\");\n\nvar _s = $RefreshSig$();\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _router = require(\"../next-server/lib/router/router\");\n\nvar _router2 = require(\"./router\");\n\nvar cachedObserver;\nvar listeners = new Map();\nvar IntersectionObserver = true ? window.IntersectionObserver : null;\nvar prefetched = {};\n\nfunction getObserver() {\n  // Return shared instance of IntersectionObserver if already created\n  if (cachedObserver) {\n    return cachedObserver;\n  } // Only create shared IntersectionObserver if supported in browser\n\n\n  if (!IntersectionObserver) {\n    return undefined;\n  }\n\n  return cachedObserver = new IntersectionObserver(function (entries) {\n    entries.forEach(function (entry) {\n      if (!listeners.has(entry.target)) {\n        return;\n      }\n\n      var cb = listeners.get(entry.target);\n\n      if (entry.isIntersecting || entry.intersectionRatio > 0) {\n        cachedObserver.unobserve(entry.target);\n        listeners[\"delete\"](entry.target);\n        cb();\n      }\n    });\n  }, {\n    rootMargin: '200px'\n  });\n}\n\nvar listenToIntersections = function listenToIntersections(el, cb) {\n  var observer = getObserver();\n\n  if (!observer) {\n    return function () {};\n  }\n\n  observer.observe(el);\n  listeners.set(el, cb);\n  return function () {\n    try {\n      observer.unobserve(el);\n    } catch (err) {\n      console.error(err);\n    }\n\n    listeners[\"delete\"](el);\n  };\n};\n\nfunction prefetch(router, href, as, options) {\n  if (false) return;\n  if (!(0, _router.isLocalURL)(href)) return; // Prefetch the JSON page if asked (only in the client)\n  // We need to handle a prefetch error here since we may be\n  // loading with priority which can reject but we don't\n  // want to force navigation since this is only a prefetch\n\n  router.prefetch(href, as, options)[\"catch\"](function (err) {\n    if (true) {\n      // rethrow to show invalid URL errors\n      throw err;\n    }\n  }); // Join on an invalid URI character\n\n  prefetched[href + '%' + as] = true;\n}\n\nfunction isModifiedEvent(event) {\n  var target = event.currentTarget.target;\n  return target && target !== '_self' || event.metaKey || event.ctrlKey || event.shiftKey || event.altKey || // triggers resource download\n  event.nativeEvent && event.nativeEvent.which === 2;\n}\n\nfunction linkClicked(e, router, href, as, replace, shallow, scroll, locale) {\n  var nodeName = e.currentTarget.nodeName;\n\n  if (nodeName === 'A' && (isModifiedEvent(e) || !(0, _router.isLocalURL)(href))) {\n    // ignore click for browserâ€™s default behavior\n    return;\n  }\n\n  e.preventDefault(); //  avoid scroll for urls with anchor refs\n\n  if (scroll == null) {\n    scroll = as.indexOf('#') < 0;\n  } // replace state instead of push if prop is present\n\n\n  router[replace ? 'replace' : 'push'](href, as, {\n    shallow: shallow,\n    locale: locale\n  }).then(function (success) {\n    if (!success) return;\n\n    if (scroll) {\n      window.scrollTo(0, 0);\n      document.body.focus();\n    }\n  });\n}\n\nfunction Link(props) {\n  _s();\n\n  if (true) {\n    var createPropError = function createPropError(args) {\n      return new Error(\"Failed prop type: The prop `\".concat(args.key, \"` expects a \").concat(args.expected, \" in `<Link>`, but got `\").concat(args.actual, \"` instead.\") + (true ? \"\\nOpen your browser's console to view the Component stack trace.\" : ''));\n    }; // TypeScript trick for type-guarding:\n\n\n    var requiredPropsGuard = {\n      href: true\n    };\n    var requiredProps = Object.keys(requiredPropsGuard);\n    requiredProps.forEach(function (key) {\n      if (key === 'href') {\n        if (props[key] == null || typeof props[key] !== 'string' && typeof props[key] !== 'object') {\n          throw createPropError({\n            key: key,\n            expected: '`string` or `object`',\n            actual: props[key] === null ? 'null' : typeof props[key]\n          });\n        }\n      } else {\n        // TypeScript trick for type-guarding:\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        var _ = key;\n      }\n    }); // TypeScript trick for type-guarding:\n\n    var optionalPropsGuard = {\n      as: true,\n      replace: true,\n      scroll: true,\n      shallow: true,\n      passHref: true,\n      prefetch: true,\n      locale: true\n    };\n    var optionalProps = Object.keys(optionalPropsGuard);\n    optionalProps.forEach(function (key) {\n      var valType = typeof props[key];\n\n      if (key === 'as') {\n        if (props[key] && valType !== 'string' && valType !== 'object') {\n          throw createPropError({\n            key: key,\n            expected: '`string` or `object`',\n            actual: valType\n          });\n        }\n      } else if (key === 'locale') {\n        if (props[key] && valType !== 'string') {\n          throw createPropError({\n            key: key,\n            expected: '`string`',\n            actual: valType\n          });\n        }\n      } else if (key === 'replace' || key === 'scroll' || key === 'shallow' || key === 'passHref' || key === 'prefetch') {\n        if (props[key] != null && valType !== 'boolean') {\n          throw createPropError({\n            key: key,\n            expected: '`boolean`',\n            actual: valType\n          });\n        }\n      } else {\n        // TypeScript trick for type-guarding:\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        var _ = key;\n      }\n    }); // This hook is in a conditional but that is ok because `process.env.NODE_ENV` never changes\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n\n    var hasWarned = _react[\"default\"].useRef(false);\n\n    if (props.prefetch && !hasWarned.current) {\n      hasWarned.current = true;\n      console.warn('Next.js auto-prefetches automatically based on viewport. The prefetch attribute is no longer needed. More: https://err.sh/vercel/next.js/prefetch-true-deprecated');\n    }\n  }\n\n  var p = props.prefetch !== false;\n  var router = (0, _router2.useRouter)();\n  var pathname = router && router.pathname || '/';\n\n  var _react$default$useMem = _react[\"default\"].useMemo(function () {\n    var _ref = (0, _router.resolveHref)(pathname, props.href, true),\n        _ref2 = _slicedToArray(_ref, 2),\n        resolvedHref = _ref2[0],\n        resolvedAs = _ref2[1];\n\n    return {\n      href: resolvedHref,\n      as: props.as ? (0, _router.resolveHref)(pathname, props.as) : resolvedAs || resolvedHref\n    };\n  }, [pathname, props.href, props.as]),\n      href = _react$default$useMem.href,\n      as = _react$default$useMem.as;\n\n  var children = props.children,\n      replace = props.replace,\n      shallow = props.shallow,\n      scroll = props.scroll,\n      locale = props.locale; // Deprecated. Warning shown by propType check. If the children provided is a string (<Link>example</Link>) we wrap it in an <a> tag\n\n  if (typeof children === 'string') {\n    children = /*#__PURE__*/_react[\"default\"].createElement(\"a\", null, children);\n  } // This will return the first child, if multiple are provided it will throw an error\n\n\n  var child = _react.Children.only(children);\n\n  var childRef = child && typeof child === 'object' && child.ref;\n\n  var cleanup = _react[\"default\"].useRef();\n\n  var setRef = _react[\"default\"].useCallback(function (el) {\n    // cleanup previous event handlers\n    if (cleanup.current) {\n      cleanup.current();\n      cleanup.current = undefined;\n    }\n\n    if (p && IntersectionObserver && el && el.tagName && (0, _router.isLocalURL)(href)) {\n      // Join on an invalid URI character\n      var isPrefetched = prefetched[href + '%' + as];\n\n      if (!isPrefetched) {\n        cleanup.current = listenToIntersections(el, function () {\n          prefetch(router, href, as, {\n            locale: typeof locale !== 'undefined' ? locale : router && router.locale\n          });\n        });\n      }\n    }\n\n    if (childRef) {\n      if (typeof childRef === 'function') childRef(el);else if (typeof childRef === 'object') {\n        childRef.current = el;\n      }\n    }\n  }, [p, childRef, href, as, router, locale]);\n\n  var childProps = {\n    ref: setRef,\n    onClick: function onClick(e) {\n      if (child.props && typeof child.props.onClick === 'function') {\n        child.props.onClick(e);\n      }\n\n      if (!e.defaultPrevented) {\n        linkClicked(e, router, href, as, replace, shallow, scroll, locale);\n      }\n    }\n  };\n\n  if (p) {\n    childProps.onMouseEnter = function (e) {\n      if (!(0, _router.isLocalURL)(href)) return;\n\n      if (child.props && typeof child.props.onMouseEnter === 'function') {\n        child.props.onMouseEnter(e);\n      }\n\n      prefetch(router, href, as, {\n        priority: true\n      });\n    };\n  } // If child is an <a> tag and doesn't have a href attribute, or if the 'passHref' property is\n  // defined, we specify the current 'href', so that repetition is not needed by the user\n\n\n  if (props.passHref || child.type === 'a' && !('href' in child.props)) {\n    childProps.href = (0, _router.addBasePath)((0, _router.addLocale)(as, typeof locale !== 'undefined' ? locale : router && router.locale, router && router.defaultLocale));\n  }\n\n  return /*#__PURE__*/_react[\"default\"].cloneElement(child, childProps);\n}\n\n_s(Link, \"KTrcstNG+xXPZMSCSWIouwhlVnY=\");\n\n_c = Link;\nvar _default = Link;\nexports[\"default\"] = _default;\n\nvar _c;\n\n$RefreshReg$(_c, \"Link\");","map":{"version":3,"sources":["../../client/link.tsx"],"names":["listeners","IntersectionObserver","window","prefetched","cachedObserver","entries","entry","cb","rootMargin","listenToIntersections","observer","getObserver","console","router","err","href","event","target","e","nodeName","isModifiedEvent","scroll","as","replace","shallow","locale","success","document","args","key","expected","requiredPropsGuard","requiredProps","Object","props","createPropError","actual","_","optionalPropsGuard","passHref","prefetch","optionalProps","valType","hasWarned","React","p","pathname","resolvedAs","children","child","Children","childRef","cleanup","setRef","el","isPrefetched","childProps","ref","onClick","linkClicked","priority","Link"],"mappings":"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","sourcesContent":["import React, { Children } from 'react'\nimport { UrlObject } from 'url'\nimport {\n  addBasePath,\n  addLocale,\n  isLocalURL,\n  NextRouter,\n  PrefetchOptions,\n  resolveHref,\n} from '../next-server/lib/router/router'\nimport { useRouter } from './router'\n\ntype Url = string | UrlObject\ntype RequiredKeys<T> = {\n  [K in keyof T]-?: {} extends Pick<T, K> ? never : K\n}[keyof T]\ntype OptionalKeys<T> = {\n  [K in keyof T]-?: {} extends Pick<T, K> ? K : never\n}[keyof T]\n\nexport type LinkProps = {\n  href: Url\n  as?: Url\n  replace?: boolean\n  scroll?: boolean\n  shallow?: boolean\n  passHref?: boolean\n  prefetch?: boolean\n  locale?: string | false\n}\ntype LinkPropsRequired = RequiredKeys<LinkProps>\ntype LinkPropsOptional = OptionalKeys<LinkProps>\n\nlet cachedObserver: IntersectionObserver\nconst listeners = new Map<Element, () => void>()\nconst IntersectionObserver =\n  typeof window !== 'undefined' ? window.IntersectionObserver : null\nconst prefetched: { [cacheKey: string]: boolean } = {}\n\nfunction getObserver(): IntersectionObserver | undefined {\n  // Return shared instance of IntersectionObserver if already created\n  if (cachedObserver) {\n    return cachedObserver\n  }\n\n  // Only create shared IntersectionObserver if supported in browser\n  if (!IntersectionObserver) {\n    return undefined\n  }\n\n  return (cachedObserver = new IntersectionObserver(\n    (entries) => {\n      entries.forEach((entry) => {\n        if (!listeners.has(entry.target)) {\n          return\n        }\n\n        const cb = listeners.get(entry.target)!\n        if (entry.isIntersecting || entry.intersectionRatio > 0) {\n          cachedObserver.unobserve(entry.target)\n          listeners.delete(entry.target)\n          cb()\n        }\n      })\n    },\n    { rootMargin: '200px' }\n  ))\n}\n\nconst listenToIntersections = (el: Element, cb: () => void) => {\n  const observer = getObserver()\n  if (!observer) {\n    return () => {}\n  }\n\n  observer.observe(el)\n  listeners.set(el, cb)\n  return () => {\n    try {\n      observer.unobserve(el)\n    } catch (err) {\n      console.error(err)\n    }\n    listeners.delete(el)\n  }\n}\n\nfunction prefetch(\n  router: NextRouter,\n  href: string,\n  as: string,\n  options?: PrefetchOptions\n): void {\n  if (typeof window === 'undefined') return\n  if (!isLocalURL(href)) return\n  // Prefetch the JSON page if asked (only in the client)\n  // We need to handle a prefetch error here since we may be\n  // loading with priority which can reject but we don't\n  // want to force navigation since this is only a prefetch\n  router.prefetch(href, as, options).catch((err) => {\n    if (process.env.NODE_ENV !== 'production') {\n      // rethrow to show invalid URL errors\n      throw err\n    }\n  })\n  // Join on an invalid URI character\n  prefetched[href + '%' + as] = true\n}\n\nfunction isModifiedEvent(event: React.MouseEvent) {\n  const { target } = event.currentTarget as HTMLAnchorElement\n  return (\n    (target && target !== '_self') ||\n    event.metaKey ||\n    event.ctrlKey ||\n    event.shiftKey ||\n    event.altKey || // triggers resource download\n    (event.nativeEvent && event.nativeEvent.which === 2)\n  )\n}\n\nfunction linkClicked(\n  e: React.MouseEvent,\n  router: NextRouter,\n  href: string,\n  as: string,\n  replace?: boolean,\n  shallow?: boolean,\n  scroll?: boolean,\n  locale?: string | false\n): void {\n  const { nodeName } = e.currentTarget\n\n  if (nodeName === 'A' && (isModifiedEvent(e) || !isLocalURL(href))) {\n    // ignore click for browserâ€™s default behavior\n    return\n  }\n\n  e.preventDefault()\n\n  //  avoid scroll for urls with anchor refs\n  if (scroll == null) {\n    scroll = as.indexOf('#') < 0\n  }\n\n  // replace state instead of push if prop is present\n  router[replace ? 'replace' : 'push'](href, as, { shallow, locale }).then(\n    (success: boolean) => {\n      if (!success) return\n      if (scroll) {\n        window.scrollTo(0, 0)\n        document.body.focus()\n      }\n    }\n  )\n}\n\nfunction Link(props: React.PropsWithChildren<LinkProps>) {\n  if (process.env.NODE_ENV !== 'production') {\n    function createPropError(args: {\n      key: string\n      expected: string\n      actual: string\n    }) {\n      return new Error(\n        `Failed prop type: The prop \\`${args.key}\\` expects a ${args.expected} in \\`<Link>\\`, but got \\`${args.actual}\\` instead.` +\n          (typeof window !== 'undefined'\n            ? \"\\nOpen your browser's console to view the Component stack trace.\"\n            : '')\n      )\n    }\n\n    // TypeScript trick for type-guarding:\n    const requiredPropsGuard: Record<LinkPropsRequired, true> = {\n      href: true,\n    } as const\n    const requiredProps: LinkPropsRequired[] = Object.keys(\n      requiredPropsGuard\n    ) as LinkPropsRequired[]\n    requiredProps.forEach((key: LinkPropsRequired) => {\n      if (key === 'href') {\n        if (\n          props[key] == null ||\n          (typeof props[key] !== 'string' && typeof props[key] !== 'object')\n        ) {\n          throw createPropError({\n            key,\n            expected: '`string` or `object`',\n            actual: props[key] === null ? 'null' : typeof props[key],\n          })\n        }\n      } else {\n        // TypeScript trick for type-guarding:\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const _: never = key\n      }\n    })\n\n    // TypeScript trick for type-guarding:\n    const optionalPropsGuard: Record<LinkPropsOptional, true> = {\n      as: true,\n      replace: true,\n      scroll: true,\n      shallow: true,\n      passHref: true,\n      prefetch: true,\n      locale: true,\n    } as const\n    const optionalProps: LinkPropsOptional[] = Object.keys(\n      optionalPropsGuard\n    ) as LinkPropsOptional[]\n    optionalProps.forEach((key: LinkPropsOptional) => {\n      const valType = typeof props[key]\n\n      if (key === 'as') {\n        if (props[key] && valType !== 'string' && valType !== 'object') {\n          throw createPropError({\n            key,\n            expected: '`string` or `object`',\n            actual: valType,\n          })\n        }\n      } else if (key === 'locale') {\n        if (props[key] && valType !== 'string') {\n          throw createPropError({\n            key,\n            expected: '`string`',\n            actual: valType,\n          })\n        }\n      } else if (\n        key === 'replace' ||\n        key === 'scroll' ||\n        key === 'shallow' ||\n        key === 'passHref' ||\n        key === 'prefetch'\n      ) {\n        if (props[key] != null && valType !== 'boolean') {\n          throw createPropError({\n            key,\n            expected: '`boolean`',\n            actual: valType,\n          })\n        }\n      } else {\n        // TypeScript trick for type-guarding:\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const _: never = key\n      }\n    })\n\n    // This hook is in a conditional but that is ok because `process.env.NODE_ENV` never changes\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const hasWarned = React.useRef(false)\n    if (props.prefetch && !hasWarned.current) {\n      hasWarned.current = true\n      console.warn(\n        'Next.js auto-prefetches automatically based on viewport. The prefetch attribute is no longer needed. More: https://err.sh/vercel/next.js/prefetch-true-deprecated'\n      )\n    }\n  }\n  const p = props.prefetch !== false\n\n  const router = useRouter()\n  const pathname = (router && router.pathname) || '/'\n\n  const { href, as } = React.useMemo(() => {\n    const [resolvedHref, resolvedAs] = resolveHref(pathname, props.href, true)\n    return {\n      href: resolvedHref,\n      as: props.as\n        ? resolveHref(pathname, props.as)\n        : resolvedAs || resolvedHref,\n    }\n  }, [pathname, props.href, props.as])\n\n  let { children, replace, shallow, scroll, locale } = props\n\n  // Deprecated. Warning shown by propType check. If the children provided is a string (<Link>example</Link>) we wrap it in an <a> tag\n  if (typeof children === 'string') {\n    children = <a>{children}</a>\n  }\n\n  // This will return the first child, if multiple are provided it will throw an error\n  const child: any = Children.only(children)\n  const childRef: any = child && typeof child === 'object' && child.ref\n\n  const cleanup = React.useRef<() => void>()\n  const setRef = React.useCallback(\n    (el: Element) => {\n      // cleanup previous event handlers\n      if (cleanup.current) {\n        cleanup.current()\n        cleanup.current = undefined\n      }\n\n      if (p && IntersectionObserver && el && el.tagName && isLocalURL(href)) {\n        // Join on an invalid URI character\n        const isPrefetched = prefetched[href + '%' + as]\n        if (!isPrefetched) {\n          cleanup.current = listenToIntersections(el, () => {\n            prefetch(router, href, as, {\n              locale:\n                typeof locale !== 'undefined'\n                  ? locale\n                  : router && router.locale,\n            })\n          })\n        }\n      }\n\n      if (childRef) {\n        if (typeof childRef === 'function') childRef(el)\n        else if (typeof childRef === 'object') {\n          childRef.current = el\n        }\n      }\n    },\n    [p, childRef, href, as, router, locale]\n  )\n\n  const childProps: {\n    onMouseEnter?: React.MouseEventHandler\n    onClick: React.MouseEventHandler\n    href?: string\n    ref?: any\n  } = {\n    ref: setRef,\n    onClick: (e: React.MouseEvent) => {\n      if (child.props && typeof child.props.onClick === 'function') {\n        child.props.onClick(e)\n      }\n      if (!e.defaultPrevented) {\n        linkClicked(e, router, href, as, replace, shallow, scroll, locale)\n      }\n    },\n  }\n\n  if (p) {\n    childProps.onMouseEnter = (e: React.MouseEvent) => {\n      if (!isLocalURL(href)) return\n      if (child.props && typeof child.props.onMouseEnter === 'function') {\n        child.props.onMouseEnter(e)\n      }\n      prefetch(router, href, as, { priority: true })\n    }\n  }\n\n  // If child is an <a> tag and doesn't have a href attribute, or if the 'passHref' property is\n  // defined, we specify the current 'href', so that repetition is not needed by the user\n  if (props.passHref || (child.type === 'a' && !('href' in child.props))) {\n    childProps.href = addBasePath(\n      addLocale(\n        as,\n        typeof locale !== 'undefined' ? locale : router && router.locale,\n        router && router.defaultLocale\n      )\n    )\n  }\n\n  return React.cloneElement(child, childProps)\n}\n\nexport default Link\n"]},"metadata":{},"sourceType":"script"}