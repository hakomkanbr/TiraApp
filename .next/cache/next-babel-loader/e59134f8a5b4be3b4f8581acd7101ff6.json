{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Abdulhekim abdullah\\\\Desktop\\\\News project\\\\backend\\\\NSiteApi\\\\nextClient\\\\layout\\\\admin\\\\sidebar\\\\Sidebar.js\",\n    _s = $RefreshSig$();\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Layout, Menu } from 'antd';\nimport options from './options'; // import Scrollbars from '@app/components/utility/customScrollBar';\n\nimport appActions from '../../../redux/app/actions'; // import Logo from '@app/components/utility/logo';\n\nimport SidebarWrapper from './Sidebar.styles';\nimport SidebarMenu from './SidebarMenu'; // import changeCurrent from '../../../redux/app/actions';\n// import logo from \"../../../assets/images/wewey66556.svg\";\n// const SubMenu = Menu.SubMenu;\n// const MenuItemGroup = Menu.ItemGroup;\n\nvar Sider = Layout.Sider;\nvar toggleOpenDrawer = appActions.toggleOpenDrawer,\n    changeOpenKeys = appActions.changeOpenKeys,\n    changeCurrent = appActions.changeCurrent,\n    toggleCollapsed = appActions.toggleCollapsed;\nexport default function Sidebar() {\n  _s();\n\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.App;\n  }),\n      view = _useSelector.view,\n      openKeys = _useSelector.openKeys,\n      collapsed = _useSelector.collapsed,\n      openDrawer = _useSelector.openDrawer,\n      current = _useSelector.current,\n      height = _useSelector.height; //   const customizedTheme = useSelector(\n  //     state => state.ThemeSwitcher.sidebarTheme\n  //   );\n\n\n  function handleClick(e) {\n    dispatch(changeCurrent([e.key]));\n\n    if (view === 'MobileView') {\n      setTimeout(function () {\n        dispatch(toggleCollapsed()); // dispatch(toggleOpenDrawer());\n      }, 100); // clearTimeout(timer);\n    }\n  }\n\n  function onOpenChange(newOpenKeys) {\n    var latestOpenKey = newOpenKeys.find(function (key) {\n      return !(openKeys.indexOf(key) > -1);\n    });\n    console.info(openKeys);\n    var latestCloseKey = openKeys.find(function (key) {\n      return !(newOpenKeys.indexOf(key) > -1);\n    });\n    var nextOpenKeys = [];\n\n    if (latestOpenKey) {\n      nextOpenKeys = getAncestorKeys(latestOpenKey).concat(latestOpenKey);\n    }\n\n    if (latestCloseKey) {\n      nextOpenKeys = getAncestorKeys(latestCloseKey);\n    }\n\n    dispatch(changeOpenKeys(nextOpenKeys));\n  }\n\n  var getAncestorKeys = function getAncestorKeys(key) {\n    var map = {\n      sub3: ['sub2']\n    };\n    return map[key] || [];\n  };\n\n  var isCollapsed = collapsed && !openDrawer;\n  var mode = isCollapsed === true ? 'vertical' : 'inline';\n\n  var onMouseEnter = function onMouseEnter(event) {\n    if (collapsed && openDrawer === false) {\n      dispatch(toggleOpenDrawer());\n    }\n\n    return;\n  };\n\n  var onMouseLeave = function onMouseLeave() {\n    if (collapsed && openDrawer === true) {\n      dispatch(toggleOpenDrawer());\n    }\n\n    return;\n  };\n\n  var styling = {\n    backgroundColor: \"#0b0b37\"\n  };\n  var submenuStyle = {\n    backgroundColor: '',\n    color: \"rgb(200 200 200)\"\n  };\n  var submenuColor = {\n    color: \"rgb(200 200 200)\"\n  };\n  return /*#__PURE__*/_jsxDEV(SidebarWrapper, {\n    style: styling,\n    children: \"asfsa\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Sidebar, \"A/K0fgIbqqBnvzBmacGAz5SthK4=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Sidebar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"sources":["C:/Users/Abdulhekim abdullah/Desktop/News project/backend/NSiteApi/nextClient/layout/admin/sidebar/Sidebar.js"],"names":["useDispatch","useSelector","Layout","Menu","options","appActions","SidebarWrapper","SidebarMenu","Sider","toggleOpenDrawer","changeOpenKeys","changeCurrent","toggleCollapsed","Sidebar","dispatch","state","App","view","openKeys","collapsed","openDrawer","current","height","handleClick","e","key","setTimeout","onOpenChange","newOpenKeys","latestOpenKey","find","indexOf","console","info","latestCloseKey","nextOpenKeys","getAncestorKeys","concat","map","sub3","isCollapsed","mode","onMouseEnter","event","onMouseLeave","styling","backgroundColor","submenuStyle","color","submenuColor"],"mappings":"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","sourcesContent":["\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Layout, Menu } from 'antd';\r\nimport options from './options';\r\n// import Scrollbars from '@app/components/utility/customScrollBar';\r\nimport appActions from '../../../redux/app/actions';\r\n// import Logo from '@app/components/utility/logo';\r\nimport SidebarWrapper from './Sidebar.styles';\r\nimport SidebarMenu from './SidebarMenu';\r\n// import changeCurrent from '../../../redux/app/actions';\r\n// import logo from \"../../../assets/images/wewey66556.svg\";\r\n// const SubMenu = Menu.SubMenu;\r\n// const MenuItemGroup = Menu.ItemGroup;\r\nconst { Sider } = Layout;\r\n\r\nvar {toggleOpenDrawer,\r\nchangeOpenKeys,\r\nchangeCurrent,\r\ntoggleCollapsed} = appActions;\r\n\r\nexport default function Sidebar() {\r\n  const dispatch = useDispatch();\r\n  const {\r\n    view,\r\n    openKeys,\r\n    collapsed,\r\n    openDrawer,\r\n    current,\r\n    height,\r\n  } = useSelector(state => state.App);\r\n//   const customizedTheme = useSelector(\r\n//     state => state.ThemeSwitcher.sidebarTheme\r\n//   );\r\n\r\n  function handleClick(e) {\r\n    dispatch(changeCurrent([e.key]));\r\n    if (view === 'MobileView') {\r\n      setTimeout(() => {\r\n        dispatch(toggleCollapsed());\r\n        // dispatch(toggleOpenDrawer());\r\n      }, 100);\r\n\r\n      // clearTimeout(timer);\r\n    }\r\n  }\r\n  function onOpenChange(newOpenKeys) {\r\n    const latestOpenKey = newOpenKeys.find(\r\n      key => !(openKeys.indexOf(key) > -1)\r\n    );\r\n    console.info(openKeys);\r\n    const latestCloseKey = openKeys.find(\r\n      key => !(newOpenKeys.indexOf(key) > -1)\r\n    );\r\n    let nextOpenKeys = [];\r\n    if (latestOpenKey) {\r\n      nextOpenKeys = getAncestorKeys(latestOpenKey).concat(latestOpenKey);\r\n    }\r\n    if (latestCloseKey) {\r\n      nextOpenKeys = getAncestorKeys(latestCloseKey);\r\n    }\r\n    dispatch(changeOpenKeys(nextOpenKeys));\r\n  }\r\n  const getAncestorKeys = key => {\r\n    const map = {\r\n      sub3: ['sub2'],\r\n    };\r\n    return map[key] || [];\r\n  };\r\n\r\n  const isCollapsed = collapsed && !openDrawer;\r\n  const mode = isCollapsed === true ? 'vertical' : 'inline';\r\n  const onMouseEnter = event => {\r\n    if (collapsed && openDrawer === false) {\r\n      dispatch(toggleOpenDrawer());\r\n    }\r\n    return;\r\n  };\r\n  const onMouseLeave = () => {\r\n    if (collapsed && openDrawer === true) {\r\n      dispatch(toggleOpenDrawer());\r\n    }\r\n    return;\r\n  };\r\n  const styling = {\r\n    backgroundColor: \"#0b0b37\",\r\n  };\r\n  const submenuStyle = {\r\n    backgroundColor: '',\r\n    color: \"rgb(200 200 200)\",\r\n  };\r\n  const submenuColor = {\r\n    color: \"rgb(200 200 200)\",\r\n  };\r\n  return (\r\n    <SidebarWrapper style={styling}>\r\n  asfsa\r\n    </SidebarWrapper>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}