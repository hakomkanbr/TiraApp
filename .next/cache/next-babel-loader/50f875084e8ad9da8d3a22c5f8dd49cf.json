{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState } from \"react\";\nimport { Modal, Upload } from \"antd\";\nimport { getBase64Duzenle } from \"lib/helpers/getBase64\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst UploadCustum = props => {\n  const {\n    0: previewImage,\n    1: setPreviewImage\n  } = useState(\"\");\n  const {\n    0: previewVisible,\n    1: setPreviewVisible\n  } = useState(false);\n  const {\n    0: previewTitle,\n    1: setPreviewTitle\n  } = useState(\"\");\n\n  const handleCancel = () => {\n    setPreviewVisible(false);\n  };\n\n  const onPreview = async file => {\n    console.info(file);\n\n    if (!file.url && !file.preview) {\n      file.preview = await getBase64Duzenle(file.originFileObj, function (image) {\n        return image;\n      });\n    }\n\n    setPreviewImage(file.url || file.thumbUrl);\n    setPreviewVisible(true);\n    setPreviewTitle(file.name || file.url.substring(file.url.lastIndexOf(\"/\") + 1));\n  };\n\n  if (props.single) {\n    return /*#__PURE__*/_jsxs(_Fragment, {\n      children: [/*#__PURE__*/_jsx(Upload.Dragger, _objectSpread(_objectSpread({\n        customRequest: () => false,\n        maxCount: 1,\n        onPreview: onPreview\n      }, props), {}, {\n        children: props.children\n      })), /*#__PURE__*/_jsx(Modal, {\n        visible: previewVisible,\n        title: previewTitle,\n        footer: null,\n        onCancel: handleCancel,\n        children: /*#__PURE__*/_jsx(\"img\", {\n          alt: \"example\",\n          style: {\n            width: \"100%\"\n          },\n          src: previewImage\n        })\n      })]\n    });\n  }\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(Upload, _objectSpread(_objectSpread({\n      customRequest: () => false,\n      onPreview: onPreview\n    }, props), {}, {\n      children: props.children\n    })), /*#__PURE__*/_jsx(Modal, {\n      visible: previewVisible,\n      title: previewTitle,\n      footer: null,\n      onCancel: handleCancel,\n      children: /*#__PURE__*/_jsx(\"img\", {\n        alt: \"example\",\n        style: {\n          width: \"100%\"\n        },\n        src: previewImage\n      })\n    })]\n  });\n};\n\nexport default UploadCustum;","map":null,"metadata":{},"sourceType":"module"}