{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Abdulhekim abdullah\\\\Desktop\\\\TireApp\\\\Tire\\\\client\\\\layout\\\\admin\\\\topbar\\\\Topbar.js\";\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Layout } from 'antd';\nimport appActions from '../../../redux/app/actions'; // import TopbarNotification from './TopbarNotification';\n// import TopbarMessage from './TopbarMessage';\n// import TopbarSearch from './TopbarSearch';\n\nimport TopbarUser from './TopbarUser';\nimport TopbarWrapper from './Topbar.styles';\nimport { MenuUnfoldOutlined } from '@ant-design/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Header\n} = Layout;\nconst {\n  toggleCollapsed\n} = appActions;\nexport default function Topbar() {\n  const [selectedItem, setSelectedItem] = React.useState(''); //const customizedTheme = useSelector(state => state.ThemeSwitcher.topbarTheme);\n\n  const customizedTheme = {\n    backgroundColor: \"#fff\",\n    textColor: \"#444\"\n  };\n  const {\n    collapsed,\n    openDrawer\n  } = useSelector(state => state.App);\n  const dispatch = useDispatch();\n  const handleToggle = React.useCallback(() => dispatch(toggleCollapsed()), [dispatch]);\n  const isCollapsed = collapsed && !openDrawer;\n  const styling = {\n    background: customizedTheme.backgroundColor,\n    position: 'fixed',\n    width: '100%',\n    height: 60\n  };\n  return /*#__PURE__*/_jsxDEV(TopbarWrapper, {\n    \"data-rtl\": \"rtl\",\n    children: /*#__PURE__*/_jsxDEV(Header, {\n      style: styling,\n      className: isCollapsed ? 'isomorphicTopbar collapsed' : 'isomorphicTopbar',\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"isoLeft\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: isCollapsed ? 'triggerBtn menuCollapsed' : 'triggerBtn menuOpen',\n          style: {\n            color: customizedTheme.textColor\n          },\n          onClick: handleToggle,\n          children: /*#__PURE__*/_jsxDEV(MenuUnfoldOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 12\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"isoRight\",\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => setSelectedItem('user'),\n          className: \"isoUser\",\n          children: /*#__PURE__*/_jsxDEV(TopbarUser, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"names":["React","useSelector","useDispatch","Layout","appActions","TopbarUser","TopbarWrapper","MenuUnfoldOutlined","Header","toggleCollapsed","Topbar","selectedItem","setSelectedItem","useState","customizedTheme","backgroundColor","textColor","collapsed","openDrawer","state","App","dispatch","handleToggle","useCallback","isCollapsed","styling","background","position","width","height","color"],"sources":["C:/Users/Abdulhekim abdullah/Desktop/TireApp/Tire/client/layout/admin/topbar/Topbar.js"],"sourcesContent":["import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Layout } from 'antd';\r\nimport appActions from '../../../redux/app/actions';\r\n// import TopbarNotification from './TopbarNotification';\r\n// import TopbarMessage from './TopbarMessage';\r\n// import TopbarSearch from './TopbarSearch';\r\nimport TopbarUser from './TopbarUser';\r\nimport TopbarWrapper from './Topbar.styles';\r\nimport { MenuUnfoldOutlined } from '@ant-design/icons';\r\n\r\nconst { Header } = Layout;\r\nconst { toggleCollapsed } = appActions;\r\n\r\nexport default function Topbar() {\r\n  const [selectedItem, setSelectedItem] = React.useState('');\r\n  //const customizedTheme = useSelector(state => state.ThemeSwitcher.topbarTheme);\r\n  const customizedTheme = {\r\n    backgroundColor : \"#fff\",\r\n    textColor : \"#444\"\r\n  }\r\n  const { collapsed, openDrawer } = useSelector(state => state.App);\r\n  const dispatch = useDispatch();\r\n  const handleToggle = React.useCallback(() => dispatch(toggleCollapsed()), [\r\n    dispatch,\r\n  ]);\r\n  const isCollapsed = collapsed && !openDrawer;\r\n  const styling = {\r\n    background: customizedTheme.backgroundColor,\r\n    position: 'fixed',\r\n    width: '100%',\r\n    height: 60,\r\n  };\r\n  return (\r\n    <TopbarWrapper data-rtl=\"rtl\">\r\n      <Header\r\n        style={styling}\r\n        \r\n        className={\r\n          isCollapsed ? 'isomorphicTopbar collapsed' : 'isomorphicTopbar'\r\n        }\r\n      >\r\n        <div className=\"isoLeft\">\r\n          <button\r\n            className={\r\n              isCollapsed ? 'triggerBtn menuCollapsed' : 'triggerBtn menuOpen'\r\n            }\r\n            style={{ color: customizedTheme.textColor }}\r\n            onClick={handleToggle}\r\n          ><MenuUnfoldOutlined/></button>\r\n        </div>\r\n\r\n        <ul className=\"isoRight\">\r\n          {/* <li className=\"isoSearch\">\r\n            <TopbarSearch />\r\n          </li> */}\r\n\r\n          {/* <li\r\n            onClick={() => setSelectedItem('notification')}\r\n            className={selectedItem ? 'isoNotify active' : 'isoNotify'}\r\n          >\r\n            <TopbarNotification />\r\n          </li> */}\r\n\r\n          {/* <li onClick={() => setSelectedItem('message')} className=\"isoMsg\">\r\n            <TopbarMessage />\r\n          </li> */}\r\n\r\n          <li onClick={() => setSelectedItem('user')} className=\"isoUser\">\r\n            <TopbarUser />\r\n          </li>\r\n        </ul>\r\n      </Header>\r\n    </TopbarWrapper>\r\n  );\r\n}"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,MAAT,QAAuB,MAAvB;AACA,OAAOC,UAAP,MAAuB,4BAAvB,C,CACA;AACA;AACA;;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,kBAAT,QAAmC,mBAAnC;;AAEA,MAAM;EAAEC;AAAF,IAAaL,MAAnB;AACA,MAAM;EAAEM;AAAF,IAAsBL,UAA5B;AAEA,eAAe,SAASM,MAAT,GAAkB;EAC/B,MAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCZ,KAAK,CAACa,QAAN,CAAe,EAAf,CAAxC,CAD+B,CAE/B;;EACA,MAAMC,eAAe,GAAG;IACtBC,eAAe,EAAG,MADI;IAEtBC,SAAS,EAAG;EAFU,CAAxB;EAIA,MAAM;IAAEC,SAAF;IAAaC;EAAb,IAA4BjB,WAAW,CAACkB,KAAK,IAAIA,KAAK,CAACC,GAAhB,CAA7C;EACA,MAAMC,QAAQ,GAAGnB,WAAW,EAA5B;EACA,MAAMoB,YAAY,GAAGtB,KAAK,CAACuB,WAAN,CAAkB,MAAMF,QAAQ,CAACZ,eAAe,EAAhB,CAAhC,EAAqD,CACxEY,QADwE,CAArD,CAArB;EAGA,MAAMG,WAAW,GAAGP,SAAS,IAAI,CAACC,UAAlC;EACA,MAAMO,OAAO,GAAG;IACdC,UAAU,EAAEZ,eAAe,CAACC,eADd;IAEdY,QAAQ,EAAE,OAFI;IAGdC,KAAK,EAAE,MAHO;IAIdC,MAAM,EAAE;EAJM,CAAhB;EAMA,oBACE,QAAC,aAAD;IAAe,YAAS,KAAxB;IAAA,uBACE,QAAC,MAAD;MACE,KAAK,EAAEJ,OADT;MAGE,SAAS,EACPD,WAAW,GAAG,4BAAH,GAAkC,kBAJjD;MAAA,wBAOE;QAAK,SAAS,EAAC,SAAf;QAAA,uBACE;UACE,SAAS,EACPA,WAAW,GAAG,0BAAH,GAAgC,qBAF/C;UAIE,KAAK,EAAE;YAAEM,KAAK,EAAEhB,eAAe,CAACE;UAAzB,CAJT;UAKE,OAAO,EAAEM,YALX;UAAA,uBAMC,QAAC,kBAAD;YAAA;YAAA;YAAA;UAAA;QAND;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QAPF,eAiBE;QAAI,SAAS,EAAC,UAAd;QAAA,uBAgBE;UAAI,OAAO,EAAE,MAAMV,eAAe,CAAC,MAAD,CAAlC;UAA4C,SAAS,EAAC,SAAtD;UAAA,uBACE,QAAC,UAAD;YAAA;YAAA;YAAA;UAAA;QADF;UAAA;UAAA;UAAA;QAAA;MAhBF;QAAA;QAAA;QAAA;MAAA,QAjBF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AA0CD"},"metadata":{},"sourceType":"module"}