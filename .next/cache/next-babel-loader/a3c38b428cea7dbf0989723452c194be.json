{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// import { getDefaultPath } from '@app/lib/helpers/url_sync';\n// import { isServer } from '@app/lib/helpers/isServer';\nimport actions, { getView } from './actions';\nconst isServer = false;\nconst preKeys = 1; // const preKeys = getDefaultPath();\n\nconst initState = {\n  collapsed: false,\n  view: true,\n  height: true,\n  openDrawer: false,\n  openKeys: preKeys,\n  current: preKeys,\n  reloadDatatable: 0,\n  kategoriId: 0,\n  sosyallar: [],\n  kategoriler: []\n};\nexport default function appReducer(state = initState, action) {\n  switch (action.type) {\n    case actions.COLLPSE_CHANGE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        collapsed: !state.collapsed\n      });\n\n    case actions.ADS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        ads: action.data\n      });\n\n    case actions.COLLPSE_OPEN_DRAWER:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        openDrawer: !state.openDrawer\n      });\n\n    case actions.TOGGLE_ALL:\n      if (state.view !== action.view || action.height !== state.height) {\n        const height = action.height ? action.height : state.height;\n        return _objectSpread(_objectSpread({}, state), {}, {\n          collapsed: action.collapsed,\n          view: action.view,\n          height\n        });\n      }\n\n      break;\n\n    case actions.CHANGE_OPEN_KEYS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        openKeys: action.openKeys\n      });\n\n    case actions.CONTACT_FORM:\n      return _objectSpread({}, state);\n\n    case actions.GET_PRODUCTS:\n      return _objectSpread({}, state);\n\n    case actions.GET_PRODUCTS_SUCCSES:\n      let products = action.payload;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        products: products\n      });\n\n    case actions.KATEGORILER:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        kategoriler: action.data\n      });\n\n    case actions.SOSYAL:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        sosyallar: action.data\n      });\n\n    case actions.GET_PRODUCTS_ERROR:\n      return _objectSpread({}, state);\n\n    case actions.RELOAD_TABLE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        reloadDatatable: state.reloadDatatable + 1\n      });\n\n    case actions.CHANGE_CURRENT:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        current: action.current\n      });\n\n    case actions.CLEAR_MENU:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        openKeys: [],\n        current: []\n      });\n\n    case actions.KATEGORI_ID:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        kategoriId: action.id\n      });\n\n    default:\n      return state;\n  }\n\n  return state;\n}","map":null,"metadata":{},"sourceType":"module"}