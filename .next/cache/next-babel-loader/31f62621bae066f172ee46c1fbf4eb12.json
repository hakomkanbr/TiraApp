{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Abdulhekim abdullah\\\\Desktop\\\\News project\\\\backend\\\\NSiteApi\\\\nextClient\\\\pages\\\\index.js\",\n    _this = this;\n\nimport Footer from \"layout/web/Footer/Footer\";\nimport Header from \"layout/web/Header/Header\";\nimport NavbarMenu from \"layout/web/navbar/Navbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar Home = function Home(_ref) {\n  var data = _ref.data;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home_page\",\n    children: [console.info(\"data\"), /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(NavbarMenu, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, _this);\n}; // This function gets called at build time on server-side.\n// It won't be called on client-side, so you can even do\n// direct database queries.\n\n\n_c = Home;\nexport var __N_SSG = true;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["Footer","Header","NavbarMenu","Home","data","console","info"],"sources":["C:/Users/Abdulhekim abdullah/Desktop/News project/backend/NSiteApi/nextClient/pages/index.js"],"sourcesContent":["import Footer from \"layout/web/Footer/Footer\";\r\nimport Header from \"layout/web/Header/Header\";\r\nimport NavbarMenu from \"layout/web/navbar/Navbar\";\r\n\r\nconst Home = ({data}) => {\r\n  return(\r\n    <div className=\"home_page\">\r\n      {\r\n        console.info(\"data\")\r\n      }\r\n      <Header/>\r\n      <NavbarMenu/>\r\n      <Footer/>\r\n    </div>\r\n  )\r\n}\r\n// This function gets called at build time on server-side.\r\n// It won't be called on client-side, so you can even do\r\n// direct database queries.\r\nexport async function getStaticProps() {\r\n  // Call an external API endpoint to get posts.\r\n  // You can use any data fetching library\r\n\r\n  postData(pointsU.sgetCardContent , { systemId: 1, categoryId: \"5\" }).then((res) => {\r\n    setData(res.data?.data);\r\n});\r\n  const res = await postData(pointsU.sgetCardContent , { systemId: 1, categoryId: \"5\" });\r\n  const data = await res.json()\r\n\r\n  // By returning { props: { posts } }, the Blog component\r\n  // will receive `posts` as a prop at build time\r\n  return {\r\n    props: {\r\n      data,\r\n    },\r\n  }\r\n}\r\n\r\nexport default Home;\r\n\r\n"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,OAAY;EAAA,IAAVC,IAAU,QAAVA,IAAU;EACvB,oBACE;IAAK,SAAS,EAAC,WAAf;IAAA,WAEIC,OAAO,CAACC,IAAR,CAAa,MAAb,CAFJ,eAIE,QAAC,MAAD;MAAA;MAAA;MAAA;IAAA,SAJF,eAKE,QAAC,UAAD;MAAA;MAAA;MAAA;IAAA,SALF,eAME,QAAC,MAAD;MAAA;MAAA;MAAA;IAAA,SANF;EAAA;IAAA;IAAA;IAAA;EAAA,SADF;AAUD,CAXD,C,CAYA;AACA;AACA;;;KAdMH,I;;AAkCN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}