{"ast":null,"code":"import _app from \"./_app\";\nimport Swal from \"sweetalert2\";\n\nconst convertErrorsToHtml = (errors, htmlType) => {\n  let html = ``;\n\n  if (Array.isArray(errors) && errors.length > 0) {\n    errors.map((err, i) => {\n      html += `<ul class=\"callout callout-${(err === null || err === void 0 ? void 0 : err.key) == \"error\" ? \"danger\" : err.key != null ? err.key : \"danger\"}\"> <li> ${err !== null && err !== void 0 && err.title ? `<div>${err.title}</div>` : \"\"}${err !== null && err !== void 0 && err.description ? err.description : \"حصل خطأ غير معروف\"}</li>\n      </ul>`;\n    });\n  } else {\n    html = `<ul class=\"callout callout-${(errors === null || errors === void 0 ? void 0 : errors.key) == \"error\" ? \"danger\" : (errors === null || errors === void 0 ? void 0 : errors.key) != null ? errors.key : \"danger\"}\"> <li> ${errors !== null && errors !== void 0 && errors.title ? `<div>${errors.title}</div>` : \"\"}${errors !== null && errors !== void 0 && errors.description ? errors.description + \" <b>(\" + errors.code + \")</b>\" : \"حصل خطأ غير معروف\"}</li>\n   \n    </ul>`;\n  }\n\n  return html;\n};\n\nconst ErrorProvider = data => {\n  var icon = Array.isArray(data) ? \"info\" : typeof data === \"object\" ? data === null || data === void 0 ? void 0 : data.key : \"info\";\n  var html = convertErrorsToHtml(data);\n  console.info(\"icon_____!\");\n  console.info(icon);\n  Swal.fire({\n    title: Array.isArray(data) ? \"خطأ\" : typeof data === \"object\" ? data === null || data === void 0 ? void 0 : data.title : \"خطأ\",\n    icon: icon,\n    html: html,\n    showConfirmButton: false,\n    showCancelButton: true,\n    cancelButtonText: \"Tamam\"\n  });\n};\n\nexport const ErrorProviderCallout = data => {\n  if (!data) return;\n  var html = convertErrorsToHtml(data);\n\n  if (status === 403) {\n    var y = document.getElementById(\"site-content\");\n    console.info(y);\n    if (!y) return;\n    y.innerHTML = `${html}`;\n    return;\n  }\n\n  var x = document.getElementById(\"error-content\");\n  if (!x) return;\n  x.innerHTML = `${html}`;\n};\nexport const hundleResponse = async res => {\n  console.info(\"res\", res);\n\n  if (res.status == 400 || res.status == 500) {\n    ErrorProvider(await res.json());\n    return;\n  }\n\n  if (res.status == 401) {\n    Swal.fire(\"error\", \"token in valid\", \"error\");\n    return;\n  }\n\n  if (res.status == 404) {\n    Swal.fire(\"error\", \" لم ينم العثور على البيانات المطلوبة\", \"error\");\n    return;\n  }\n\n  return res;\n};\nexport default ErrorProvider;","map":null,"metadata":{},"sourceType":"module"}