{"ast":null,"code":"import React from \"react\";\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport 'react-quill/dist/quill.bubble.css';\nimport 'react-quill/dist/quill.core.css';\nimport EditorWrapper from './editor.style';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nclass Editor extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      editorHtml: '',\n      theme: 'snow'\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(html) {\n    this.setState({\n      editorHtml: html\n    });\n  }\n\n  handleThemeChange(newTheme) {\n    if (newTheme === 'core') newTheme = null;\n    this.setState({\n      theme: newTheme\n    });\n  }\n\n  render() {\n    var _this$props$onChange, _this$props, _this$props$value, _this$props2;\n\n    return /*#__PURE__*/_jsx(EditorWrapper, {\n      className: this.props.className,\n      children: /*#__PURE__*/_jsx(ReactQuill, {\n        theme: this.state.theme,\n        style: {\n          marginBottom: 15\n        },\n        onChange: (_this$props$onChange = (_this$props = this.props) === null || _this$props === void 0 ? void 0 : _this$props.onChange) !== null && _this$props$onChange !== void 0 ? _this$props$onChange : this.handleChange,\n        value: (_this$props$value = (_this$props2 = this.props) === null || _this$props2 === void 0 ? void 0 : _this$props2.value) !== null && _this$props$value !== void 0 ? _this$props$value : \"not value\",\n        modules: Editor.modules,\n        formats: Editor.formats,\n        bounds: '.app',\n        placeholder: this.props.placeholder\n      })\n    });\n  }\n\n}\n/*\r\n * Quill modules to attach to editor\r\n * See https://quilljs.com/docs/modules/ for complete options\r\n */\n\n\nEditor.modules = {\n  toolbar: [[{\n    header: '1'\n  }, {\n    header: '2'\n  }, {\n    font: []\n  }], [{\n    size: []\n  }], ['bold', 'italic', 'underline', 'strike', 'blockquote'], [{\n    list: 'ordered'\n  }, {\n    list: 'bullet'\n  }, {\n    indent: '-1'\n  }, {\n    indent: '+1'\n  }], ['link', 'image', 'video'], ['clean']],\n  clipboard: {\n    // toggle to add extra line breaks when pasting HTML:\n    matchVisual: false\n  }\n};\n/*\r\n * Quill editor formats\r\n * See https://quilljs.com/docs/formats/\r\n */\n\nEditor.formats = ['header', 'font', 'size', 'bold', 'italic', 'underline', 'strike', 'blockquote', 'list', 'bullet', 'indent', 'link', 'image', 'video'];\n/*\r\n * PropType validation\r\n */\n\nexport default Editor; // export default class Editor extends React.Component {\n//     constructor(props) {\n//       super(props)\n//       this.state = { text: '' } // You can also pass a Quill Delta here\n//       this.handleChange = this.handleChange.bind(this)\n//     }\n//     handleChange(value) {\n//       this.setState({ text: value })\n//     }\n//     render() {\n//       return (\n//         <ReactQuill value={this.state.text}\n//                     onChange={this.handleChange} />\n//       )\n//     }\n// }","map":null,"metadata":{},"sourceType":"module"}