{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Abdulhekim abdullah\\\\Desktop\\\\News project\\\\backend\\\\NSiteApi\\\\nextClient\\\\components\\\\Notify.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useContext } from 'react';\nimport { DataContext } from '../store/GlobalState';\nimport Loading from './Loading';\nimport Toast from './Toast';\n\nvar Notify = function Notify() {\n  _s();\n\n  var _useContext = useContext(DataContext),\n      state = _useContext.state,\n      dispatch = _useContext.dispatch;\n\n  var notify = state.notify;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [notify.loading && /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 32\n    }, _this), notify.error && /*#__PURE__*/_jsxDEV(Toast, {\n      msg: {\n        msg: notify.error,\n        title: \"Error\"\n      },\n      handleShow: function handleShow() {\n        return dispatch({\n          type: 'NOTIFY',\n          payload: {}\n        });\n      },\n      bgColor: \"bg-danger\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 17\n    }, _this), notify.success && /*#__PURE__*/_jsxDEV(Toast, {\n      msg: {\n        msg: notify.success,\n        title: \"Success\"\n      },\n      handleShow: function handleShow() {\n        return dispatch({\n          type: 'NOTIFY',\n          payload: {}\n        });\n      },\n      bgColor: \"bg-success\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(Notify, \"fbzusV+fmAICL+QC+YSzJO5x4kE=\");\n\n_c = Notify;\nexport default Notify;\n\nvar _c;\n\n$RefreshReg$(_c, \"Notify\");","map":{"version":3,"sources":["C:/Users/Abdulhekim abdullah/Desktop/News project/backend/NSiteApi/nextClient/components/Notify.js"],"names":["useContext","DataContext","Loading","Toast","Notify","state","dispatch","notify","loading","error","msg","title","type","payload","success"],"mappings":";;;;;;;AAAA,SAAQA,UAAR,QAAyB,OAAzB;AACA,SAAQC,WAAR,QAA0B,sBAA1B;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,GAAM;AAAA;;AAAA,oBACSJ,UAAU,CAACC,WAAD,CADnB;AAAA,MACVI,KADU,eACVA,KADU;AAAA,MACHC,QADG,eACHA,QADG;;AAAA,MAETC,MAFS,GAEEF,KAFF,CAETE,MAFS;AAIjB,sBACI;AAAA,eACKA,MAAM,CAACC,OAAP,iBAAkB,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,aADvB,EAEKD,MAAM,CAACE,KAAP,iBACG,QAAC,KAAD;AACI,MAAA,GAAG,EAAE;AAAEC,QAAAA,GAAG,EAAEH,MAAM,CAACE,KAAd;AAAqBE,QAAAA,KAAK,EAAE;AAA5B,OADT;AAEI,MAAA,UAAU,EAAE;AAAA,eAAML,QAAQ,CAAC;AAAEM,UAAAA,IAAI,EAAE,QAAR;AAAkBC,UAAAA,OAAO,EAAE;AAA3B,SAAD,CAAd;AAAA,OAFhB;AAGI,MAAA,OAAO,EAAC;AAHZ;AAAA;AAAA;AAAA;AAAA,aAHR,EAUKN,MAAM,CAACO,OAAP,iBACG,QAAC,KAAD;AACI,MAAA,GAAG,EAAE;AAAEJ,QAAAA,GAAG,EAAEH,MAAM,CAACO,OAAd;AAAuBH,QAAAA,KAAK,EAAE;AAA9B,OADT;AAEI,MAAA,UAAU,EAAE;AAAA,eAAML,QAAQ,CAAC;AAAEM,UAAAA,IAAI,EAAE,QAAR;AAAkBC,UAAAA,OAAO,EAAE;AAA3B,SAAD,CAAd;AAAA,OAFhB;AAGI,MAAA,OAAO,EAAC;AAHZ;AAAA;AAAA;AAAA;AAAA,aAXR;AAAA,kBADJ;AAoBH,CAxBD;;GAAMT,M;;KAAAA,M;AA2BN,eAAeA,MAAf","sourcesContent":["import {useContext} from 'react'\r\nimport {DataContext} from '../store/GlobalState'\r\nimport Loading from './Loading'\r\nimport Toast from './Toast'\r\n\r\nconst Notify = () => {\r\n    const {state, dispatch} = useContext(DataContext)\r\n    const { notify } = state\r\n\r\n    return(\r\n        <> \r\n            {notify.loading && <Loading />}\r\n            {notify.error && \r\n                <Toast\r\n                    msg={{ msg: notify.error, title: \"Error\" }}\r\n                    handleShow={() => dispatch({ type: 'NOTIFY', payload: {} })}\r\n                    bgColor=\"bg-danger\"\r\n                />\r\n            }\r\n\r\n            {notify.success && \r\n                <Toast\r\n                    msg={{ msg: notify.success, title: \"Success\" }}\r\n                    handleShow={() => dispatch({ type: 'NOTIFY', payload: {} })}\r\n                    bgColor=\"bg-success\"\r\n                />\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default Notify\r\n"]},"metadata":{},"sourceType":"module"}