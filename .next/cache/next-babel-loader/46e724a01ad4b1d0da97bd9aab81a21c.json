{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Abdulhekim abdullah\\\\Desktop\\\\TireApp\\\\Tire\\\\client\\\\components\\\\elements\\\\editor\\\\Editor.js\";\nimport React from \"react\";\nimport PropTypes from 'prop-types';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport 'react-quill/dist/quill.bubble.css';\nimport 'react-quill/dist/quill.core.css';\nimport EditorWrapper from './editor.style';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Editor extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      editorHtml: '',\n      theme: 'snow'\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(html) {\n    this.setState({\n      editorHtml: html\n    });\n  }\n\n  handleThemeChange(newTheme) {\n    if (newTheme === 'core') newTheme = null;\n    this.setState({\n      theme: newTheme\n    });\n  }\n\n  render() {\n    var _this$props$onChange, _this$props, _this$props$value, _this$props2;\n\n    return /*#__PURE__*/_jsxDEV(EditorWrapper, {\n      className: this.props.className,\n      children: /*#__PURE__*/_jsxDEV(ReactQuill, {\n        theme: this.state.theme,\n        style: {\n          marginBottom: 15\n        },\n        onChange: (_this$props$onChange = (_this$props = this.props) === null || _this$props === void 0 ? void 0 : _this$props.onChange) !== null && _this$props$onChange !== void 0 ? _this$props$onChange : this.handleChange,\n        value: (_this$props$value = (_this$props2 = this.props) === null || _this$props2 === void 0 ? void 0 : _this$props2.value) !== null && _this$props$value !== void 0 ? _this$props$value : \"not value\",\n        modules: Editor.modules,\n        formats: Editor.formats,\n        bounds: '.app',\n        placeholder: this.props.placeholder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n/*\r\n * Quill modules to attach to editor\r\n * See https://quilljs.com/docs/modules/ for complete options\r\n */\n\n\nEditor.modules = {\n  toolbar: [[{\n    header: '1'\n  }, {\n    header: '2'\n  }, {\n    font: []\n  }], [{\n    size: []\n  }], ['bold', 'italic', 'underline', 'strike', 'blockquote'], [{\n    list: 'ordered'\n  }, {\n    list: 'bullet'\n  }, {\n    indent: '-1'\n  }, {\n    indent: '+1'\n  }], ['link', 'image', 'video'], ['clean']],\n  clipboard: {\n    // toggle to add extra line breaks when pasting HTML:\n    matchVisual: false\n  }\n};\n/*\r\n * Quill editor formats\r\n * See https://quilljs.com/docs/formats/\r\n */\n\nEditor.formats = ['header', 'font', 'size', 'bold', 'italic', 'underline', 'strike', 'blockquote', 'list', 'bullet', 'indent', 'link', 'image', 'video'];\n/*\r\n * PropType validation\r\n */\n\nEditor.propTypes = {\n  placeholder: PropTypes.string\n};\nexport default Editor; // export default class Editor extends React.Component {\n//     constructor(props) {\n//       super(props)\n//       this.state = { text: '' } // You can also pass a Quill Delta here\n//       this.handleChange = this.handleChange.bind(this)\n//     }\n//     handleChange(value) {\n//       this.setState({ text: value })\n//     }\n//     render() {\n//       return (\n//         <ReactQuill value={this.state.text}\n//                     onChange={this.handleChange} />\n//       )\n//     }\n// }","map":{"version":3,"names":["React","PropTypes","ReactQuill","EditorWrapper","Editor","Component","constructor","state","editorHtml","theme","handleChange","bind","html","setState","handleThemeChange","newTheme","render","props","className","marginBottom","onChange","value","modules","formats","placeholder","toolbar","header","font","size","list","indent","clipboard","matchVisual","propTypes","string"],"sources":["C:/Users/Abdulhekim abdullah/Desktop/TireApp/Tire/client/components/elements/editor/Editor.js"],"sourcesContent":["import React from \"react\"\r\nimport PropTypes from 'prop-types';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport 'react-quill/dist/quill.bubble.css';\r\nimport 'react-quill/dist/quill.core.css';\r\nimport EditorWrapper from './editor.style';\r\n\r\n\r\nclass Editor extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = { editorHtml: '', theme: 'snow' };\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  handleChange(html) {\r\n    this.setState({ editorHtml: html });\r\n  }\r\n\r\n  handleThemeChange(newTheme) {\r\n    if (newTheme === 'core') newTheme = null;\r\n    this.setState({ theme: newTheme });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <EditorWrapper className={this.props.className}>\r\n        <ReactQuill\r\n          theme={this.state.theme}\r\n          style={{marginBottom:15}}\r\n          onChange={this.props?.onChange ?? this.handleChange}\r\n          value={this.props?.value ?? \"not value\"}\r\n          modules={Editor.modules}\r\n          formats={Editor.formats}\r\n          bounds={'.app'}\r\n          placeholder={this.props.placeholder}\r\n        />\r\n        {/* <div className=\"themeSwitcher\">\r\n          <label>Theme </label>\r\n          <select onChange={e => this.handleThemeChange(e.target.value)}>\r\n            <option value=\"snow\">Snow</option>\r\n            <option value=\"bubble\">Bubble</option>\r\n            <option value=\"core\">Core</option>\r\n          </select>\r\n        </div> */}\r\n      </EditorWrapper>\r\n    );\r\n  }\r\n}\r\n\r\n/*\r\n * Quill modules to attach to editor\r\n * See https://quilljs.com/docs/modules/ for complete options\r\n */\r\nEditor.modules = {\r\n  toolbar: [\r\n    [{ header: '1' }, { header: '2' }, { font: [] }],\r\n    [{ size: [] }],\r\n    ['bold', 'italic', 'underline', 'strike', 'blockquote'],\r\n    [\r\n      { list: 'ordered' },\r\n      { list: 'bullet' },\r\n      { indent: '-1' },\r\n      { indent: '+1' },\r\n    ],\r\n    ['link', 'image', 'video'],\r\n    ['clean'],\r\n  ],\r\n  clipboard: {\r\n    // toggle to add extra line breaks when pasting HTML:\r\n    matchVisual: false,\r\n  },\r\n};\r\n/*\r\n * Quill editor formats\r\n * See https://quilljs.com/docs/formats/\r\n */\r\nEditor.formats = [\r\n  'header',\r\n  'font',\r\n  'size',\r\n  'bold',\r\n  'italic',\r\n  'underline',\r\n  'strike',\r\n  'blockquote',\r\n  'list',\r\n  'bullet',\r\n  'indent',\r\n  'link',\r\n  'image',\r\n  'video',\r\n];\r\n\r\n/*\r\n * PropType validation\r\n */\r\nEditor.propTypes = {\r\n  placeholder: PropTypes.string,\r\n};\r\n\r\nexport default Editor;\r\n\r\n\r\n// export default class Editor extends React.Component {\r\n//     constructor(props) {\r\n//       super(props)\r\n//       this.state = { text: '' } // You can also pass a Quill Delta here\r\n//       this.handleChange = this.handleChange.bind(this)\r\n//     }\r\n   \r\n//     handleChange(value) {\r\n//       this.setState({ text: value })\r\n//     }\r\n   \r\n//     render() {\r\n//       return (\r\n//         <ReactQuill value={this.state.text}\r\n//                     onChange={this.handleChange} />\r\n//       )\r\n//     }\r\n// }"],"mappings":"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"},"metadata":{},"sourceType":"module"}