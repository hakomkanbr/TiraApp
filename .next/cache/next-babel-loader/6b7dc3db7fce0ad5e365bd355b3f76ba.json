{"ast":null,"code":"import { authService } from '../../services/authServices';\nimport authConfig from '../../config/siteConfig';\nimport { ErrorProviderCallout } from '../../services/hataYoetimi';\nexport const CHECK_AUTHORIZATION = 'CHECK_AUTHORIZATION';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_ERROR = \"LOGIN_ERROR\";\nexport const CHECK_LOGIN = \"CHECK_LOGIN\";\nexport const LOGOUT = \"LOGOUT\";\n\nconst loginSuccess = user => {\n  return {\n    type: LOGIN_SUCCESS,\n    user\n  };\n}; // const loginError = error => {\n//     return {\n//         type: LOGIN_ERROR,\n//         error\n//     };\n// };\n// export const checkAuthorization = () => {\n//     const token = localStorage.getItem(authConfig.tokenLabel);\n//     if (token) {\n//         //is exp?\n//         return dispatch => {\n//             dispatch(loginSuccess(token))\n//         }\n//     }\n//     return dispatch => {\n//         dispatch(loginError(\"\"))\n//     }\n// }\n// export const login = (username, password) => {\n//     return dispatch => {\n//         authService.login(username, password)\n//             .then(result => {\n//                 let data = result.data;\n//                 // console.error(result);\n//                 // console.error(data);\n//                 if(data.status === false){\n//                     console.error(\"false geldi\");\n//                     // dispatch(loginSuccess(data));\n//                     dispatch(loginError(data.error));\n//                     return;\n//                 }\n//                 window.location.assign(\"/Admin\");\n//             })\n//             .catch(err => {\n//                 ErrorProviderCallout(err)\n//                 // let status = err.response?.data ;\n//                 // console.log(err.response.data.description)\n//                 // let message = \"\";\n//                 // status === 401\n//                 //     ?  message = status\n//                 //     :  message = err.response.data.description\n//                 // dispatch(loginError(message));\n//             });\n//     }\n// }\n// export const logout = () => {\n//     authService.logOut();\n//     return {\n//         type: LOGOUT,\n//     };\n// }","map":{"version":3,"sources":["C:/Users/Abdulhekim abdullah/Desktop/News project/backend/NSiteApi/nextClient/redux/auth/actions.js"],"names":["authService","authConfig","ErrorProviderCallout","CHECK_AUTHORIZATION","LOGIN_SUCCESS","LOGIN_ERROR","CHECK_LOGIN","LOGOUT","loginSuccess","user","type"],"mappings":"AAAA,SAASA,WAAT,QAA4B,6BAA5B;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,SAASC,oBAAT,QAAqC,4BAArC;AAEA,OAAO,MAAMC,mBAAmB,GAAM,qBAA/B;AACP,OAAO,MAAMC,aAAa,GAAY,eAA/B;AACP,OAAO,MAAMC,WAAW,GAAc,aAA/B;AACP,OAAO,MAAMC,WAAW,GAAc,aAA/B;AACP,OAAO,MAAMC,MAAM,GAAmB,QAA/B;;AAEP,MAAMC,YAAY,GAAGC,IAAI,IAAI;AACzB,SAAO;AACHC,IAAAA,IAAI,EAAEN,aADH;AAEHK,IAAAA;AAFG,GAAP;AAIH,CALD,C,CAOA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { authService } from '../../services/authServices';\r\nimport authConfig from '../../config/siteConfig';\r\nimport { ErrorProviderCallout } from '../../services/hataYoetimi';\r\n\r\nexport const CHECK_AUTHORIZATION    = 'CHECK_AUTHORIZATION';\r\nexport const LOGIN_SUCCESS          = 'LOGIN_SUCCESS';\r\nexport const LOGIN_ERROR            = \"LOGIN_ERROR\";\r\nexport const CHECK_LOGIN            = \"CHECK_LOGIN\";\r\nexport const LOGOUT                 = \"LOGOUT\";\r\n\r\nconst loginSuccess = user => {\r\n    return {\r\n        type: LOGIN_SUCCESS,\r\n        user\r\n    };\r\n};\r\n\r\n// const loginError = error => {\r\n//     return {\r\n//         type: LOGIN_ERROR,\r\n//         error\r\n//     };\r\n// };\r\n\r\n// export const checkAuthorization = () => {\r\n//     const token = localStorage.getItem(authConfig.tokenLabel);\r\n//     if (token) {\r\n//         //is exp?\r\n//         return dispatch => {\r\n//             dispatch(loginSuccess(token))\r\n//         }\r\n//     }\r\n//     return dispatch => {\r\n//         dispatch(loginError(\"\"))\r\n//     }\r\n// }\r\n\r\n// export const login = (username, password) => {\r\n//     return dispatch => {\r\n//         authService.login(username, password)\r\n//             .then(result => {\r\n//                 let data = result.data;\r\n//                 // console.error(result);\r\n//                 // console.error(data);\r\n               \r\n//                 if(data.status === false){\r\n//                     console.error(\"false geldi\");\r\n                   \r\n//                     // dispatch(loginSuccess(data));\r\n//                     dispatch(loginError(data.error));\r\n//                     return;\r\n//                 }\r\n//                 window.location.assign(\"/Admin\");\r\n//             })\r\n//             .catch(err => {\r\n//                 ErrorProviderCallout(err)\r\n//                 // let status = err.response?.data ;\r\n//                 // console.log(err.response.data.description)\r\n//                 // let message = \"\";\r\n//                 // status === 401\r\n//                 //     ?  message = status\r\n//                 //     :  message = err.response.data.description\r\n//                 // dispatch(loginError(message));\r\n//             });\r\n//     }\r\n// }\r\n\r\n// export const logout = () => {\r\n//     authService.logOut();\r\n//     return {\r\n//         type: LOGOUT,\r\n//     };\r\n// }\r\n "]},"metadata":{},"sourceType":"module"}