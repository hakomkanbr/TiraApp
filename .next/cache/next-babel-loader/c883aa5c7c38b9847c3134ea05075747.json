{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState } from 'react';\nimport CardCustum from \"components/elements/card/Card\";\nimport { Form, Input, notification, Select } from 'antd';\nimport { useRouter } from 'next/router';\nimport ButtonCustum from 'components/elements/button/Button';\nimport { postData } from 'utils/fetchData';\nimport pointsU from 'points';\nimport getBase64 from 'lib/helpers/getBase64';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst formItemLayout = {\n  labelCol: {\n    span: 6\n  },\n  wrapperCol: {\n    span: 14\n  }\n};\n\nconst IcerikEkleDuznle = () => {\n  const [form] = Form.useForm();\n  const {\n    0: contentFoto,\n    1: setContentFoto\n  } = useState(null);\n  const {\n    0: photoReloaded,\n    1: setPhotoReloaded\n  } = useState(false);\n  const history = useRouter();\n\n  const onFinish = async values => {\n    try {\n      postData(pointsU.repassword, _objectSpread({}, values)).then(res => {\n        notification[\"success\"]({\n          placement: \"top\",\n          message: 'تم حفظ البيانات بنجاح'\n        });\n      });\n    } catch (err) {\n      console.error(\"err\");\n      console.error(err);\n    }\n  };\n\n  const onChange = async ({\n    fileList: newFileList\n  }) => {\n    let f = [];\n    setPhotoReloaded(true);\n    console.log(newFileList);\n\n    for (let i = 0; i < newFileList.length; i++) {\n      var obj = newFileList[i];\n\n      if (obj[\"status\"]) {\n        obj[\"status\"] = \"done\";\n      }\n\n      if (obj[\"originFileObj\"]) {\n        let x = await getBase64(obj.originFileObj);\n        let b = x.substr(x.indexOf(\",\") + 1, x.length); // on submit array\n\n        f.push({\n          name: obj.name,\n          type: obj.type,\n          fileBase64: b\n        });\n      } else {\n        var _obj$url;\n\n        let b = obj === null || obj === void 0 ? void 0 : (_obj$url = obj.url) === null || _obj$url === void 0 ? void 0 : _obj$url.substr(obj.url.indexOf(\",\") + 1, obj.url.length);\n        f.push({\n          name: obj.name,\n          type: \"\",\n          fileBase64: b\n        });\n      }\n    }\n\n    setContentFoto(newFileList);\n  };\n\n  return /*#__PURE__*/_jsx(CardCustum, {\n    title: \"\\u0642\\u0633\\u0645 \\u0627\\u0644\\u0623\\u0645\\u0627\\u0646\",\n    children: /*#__PURE__*/_jsxs(Form, _objectSpread(_objectSpread({\n      form: form,\n      name: \"validate_other\"\n    }, formItemLayout), {}, {\n      onFinish: onFinish,\n      children: [/*#__PURE__*/_jsx(Form.Item, {\n        name: \"username\",\n        label: \"\\u0623\\u0633\\u0645 \\u0627\\u0644\\u0645\\u0633\\u062A\\u062E\\u062F\\u0645\",\n        rules: [{\n          required: true,\n          message: 'الرجاء أدخال كلمة السر القديمة'\n        }, {\n          min: 8,\n          message: '  كلمة السر يجب أن تكون اكثر من 8'\n        }],\n        hasFeedback: true,\n        children: /*#__PURE__*/_jsx(Input.Password, {})\n      }), /*#__PURE__*/_jsx(Form.Item, {\n        name: \"password\",\n        label: \"\\u0643\\u0644\\u0645\\u0629 \\u0627\\u0644\\u0633\\u0631 \\u0627\\u0644\\u0642\\u062F\\u064A\\u0645\\u0629\",\n        rules: [{\n          required: true,\n          message: 'الرجاء أدخال كلمة السر القديمة'\n        }, {\n          min: 8,\n          message: '  كلمة السر يجب أن تكون اكثر من 8'\n        }],\n        hasFeedback: true,\n        children: /*#__PURE__*/_jsx(Input.Password, {})\n      }), /*#__PURE__*/_jsx(Form.Item, {\n        name: \"newPassword\",\n        label: \"\\u0643\\u0644\\u0645\\u0629 \\u0627\\u0644\\u0633\\u0631 \\u0627\\u0644\\u062C\\u062F\\u064A\\u062F\\u0629\",\n        rules: [{\n          required: true,\n          message: 'الرجاء أدخال كلمة السر'\n        }, {\n          validator: (_, value) => {\n            if (value.length < 8) {\n              return Promise.reject(new Error('  كلمة السر يجب أن تكون اكثر من 8'));\n            }\n\n            if (value.search(/[a-z]/i) < 0) {\n              return Promise.reject(new Error('يجب أن تحتوي كلمة السر على حرف زغير على الأقل'));\n            }\n\n            if (value.search(/[A-Z]/) < 0) {\n              return Promise.reject(new Error('يجب أن تحتوي كلمة السر على حرف كبير على الأقل'));\n            }\n\n            if (value.search(/[!@#\\$%\\^&\\*_]/) < 0) {\n              return Promise.reject(new Error(\"يجب أن تحتوي كلمة السر على  [ ! @ # $ % ^ & * _ ]\"));\n            }\n\n            if (value.search(/[0-9]/) < 0) {\n              return Promise.reject(new Error('يجب أن تحتوي كلمة السر على رقم واحد على الأقل'));\n            }\n\n            return Promise.resolve();\n          }\n        }],\n        hasFeedback: true,\n        children: /*#__PURE__*/_jsx(Input.Password, {})\n      }), /*#__PURE__*/_jsx(Form.Item, {\n        name: \"rePassword\",\n        label: \"\\u0623\\u0639\\u062F \\u0643\\u062A\\u0627\\u0628\\u0629 \\u0643\\u0644\\u0645\\u0629 \\u0627\\u0644\\u0633\\u0631\",\n        dependencies: ['password'],\n        hasFeedback: true,\n        rules: [{\n          required: true,\n          message: 'رجاء أعد كتابة كلمة السر'\n        }, {\n          min: 8,\n          message: '  كلمة السر يجب أن تكون اكثر من 8'\n        }, ({\n          getFieldValue\n        }) => ({\n          validator(_, value) {\n            if (!value || getFieldValue('newPassword') === value) {\n              return Promise.resolve();\n            }\n\n            return Promise.reject(new Error('كلمة السر غير متطابقة'));\n          }\n\n        })],\n        children: /*#__PURE__*/_jsx(Input.Password, {})\n      }), /*#__PURE__*/_jsx(Form.Item, {\n        children: /*#__PURE__*/_jsx(ButtonCustum, {\n          type: \"primary\",\n          htmlType: \"submit\",\n          children: \"\\u062D\\u0641\\u0638\"\n        })\n      })]\n    }))\n  });\n};\n\nexport default IcerikEkleDuznle;","map":null,"metadata":{},"sourceType":"module"}