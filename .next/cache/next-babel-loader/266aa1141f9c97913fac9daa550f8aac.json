{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport TableStyle from \"./table.style\";\nimport { Col, Menu, Row, Form, Checkbox, Table } from \"antd\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport ButtonCustum from \"../button/Button\";\nimport debounce from \"lodash/debounce\";\nimport { CloseOutlined, SearchOutlined } from \"@ant-design/icons\"; // import { IoMdOptions } from \"react-icons/io\";\n\nimport InputCustum from \"../input/Input\";\nimport { useSelector } from \"react-redux\";\nimport { postData } from \"utils/fetchData\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport const filterParams = params => {\n  delete params.data;\n  delete params.pagination;\n};\nexport const getRandomuserParams = params => {\n  var _params$pagination$pa, _params$pagination, _params$pagination$cu, _params$pagination2, _params$pagination$se, _params$pagination3, _params$sortField, _params$sortOrder;\n\n  return _objectSpread({\n    pageSize: (_params$pagination$pa = params === null || params === void 0 ? void 0 : (_params$pagination = params.pagination) === null || _params$pagination === void 0 ? void 0 : _params$pagination.pageSize) !== null && _params$pagination$pa !== void 0 ? _params$pagination$pa : 10,\n    currentPage: (_params$pagination$cu = params === null || params === void 0 ? void 0 : (_params$pagination2 = params.pagination) === null || _params$pagination2 === void 0 ? void 0 : _params$pagination2.current) !== null && _params$pagination$cu !== void 0 ? _params$pagination$cu : 1,\n    search: (_params$pagination$se = params === null || params === void 0 ? void 0 : (_params$pagination3 = params.pagination) === null || _params$pagination3 === void 0 ? void 0 : _params$pagination3.search) !== null && _params$pagination$se !== void 0 ? _params$pagination$se : \"\",\n    sortField: (_params$sortField = params === null || params === void 0 ? void 0 : params.sortField) !== null && _params$sortField !== void 0 ? _params$sortField : \"id\",\n    sortOrder: (_params$sortOrder = params === null || params === void 0 ? void 0 : params.sortOrder) !== null && _params$sortOrder !== void 0 ? _params$sortOrder : \"descend\"\n  }, params);\n};\n\nconst TableCustum = _ref => {\n  let props = Object.assign({}, _ref);\n  // parametre come from props\n  const {\n    url,\n    params\n  } = props; // datatable setting\n\n  const {\n    0: datatable,\n    1: setDatatable\n  } = useState(_objectSpread({\n    pagination: {\n      current: 1,\n      // itemRender : (_, type, originalElement) => {\n      //   if (type === 'prev') {\n      //     return <a></a>;\n      //   }\n      //   if (type === 'next') {\n      //     return <a></a>;\n      //   }\n      //   return originalElement;\n      // },\n      pageSize: 10,\n      showSizeChanger: true,\n      pageSizeOptions: [10, 25, 50, 100, 1000],\n      showTotal: (total, range) => {\n        return ` يعرض ${range[0]} من ${total} قيود .`;\n      },\n      sortOrder: \"id\",\n      sortField: \"descend\"\n    },\n    sortOrder: \"id\",\n    sortField: \"descend\",\n    data: [],\n    Ids: []\n  }, params)); // diger component reload datatable gerekiyorse\n\n  const isReload = useSelector(state => state.App.reloadDatatable);\n  const {\n    Ids\n  } = datatable; // loadin table\n\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false); // search input\n\n  const {\n    0: search,\n    1: setSearch\n  } = useState(\"\"); // refresh data in table\n\n  const getResults = async function (params = {}) {\n    params.search = params.search || search;\n    setLoading(true);\n    let y = getRandomuserParams(params);\n    filterParams(y);\n\n    try {\n      let result = await postData(url, y);\n      setDatatable(_objectSpread(_objectSpread({}, datatable), {}, {\n        data: result === null || result === void 0 ? void 0 : result.data,\n        pagination: _objectSpread(_objectSpread({}, params.pagination), {}, {\n          total: result === null || result === void 0 ? void 0 : result.total\n        })\n      }));\n      setLoading(false);\n    } catch (e) {// ErrorProvider(e);\n    }\n  }; // change the table  when working\n\n\n  const handleTableChange = (pagination, filters, sorter) => {\n    // pagination change yaparken önce gelmiyordu\n    pagination.showTotal = (total, range) => {\n      return ` يعرض ${range[0]} من ${total} قيود .`;\n    };\n\n    console.info(\"pagination , filters , sorter\");\n    console.info(pagination, filters, sorter);\n    getResults(_objectSpread(_objectSpread({}, datatable), {}, {\n      sortField: pagination === null || pagination === void 0 ? void 0 : pagination.sortField,\n      sortOrder: pagination === null || pagination === void 0 ? void 0 : pagination.sortOrder,\n      pagination\n    }, filters));\n  };\n\n  const onChangeSelectedCheckBox = Ids => {\n    setDatatable(_objectSpread(_objectSpread({}, datatable), {}, {\n      Ids\n    }));\n  }; // select rows\n\n\n  const rowSelection = {\n    selectedRowKeys: Ids,\n    onChange: onChangeSelectedCheckBox\n  };\n  useEffect(() => {\n    getResults(_objectSpread({}, datatable));\n  }, [isReload]); // filter\n\n  const [form] = Form.useForm(); // filter\n\n  const {\n    0: isFilterOpen,\n    1: setIsFilterOpen\n  } = useState(null); // search Input\n\n  const {\n    0: isSearchOpen,\n    1: setIsSearchOpen\n  } = useState(null); // show / hide filter\n\n  const isFilter = e => {\n    if (!isFilterOpen) {\n      setIsFilterOpen(true);\n    } else {\n      form.resetFields();\n      getResults(_objectSpread({}, datatable));\n      setIsFilterOpen(false);\n    }\n  }; // when submit form in filtere\n\n\n  const filtereSubmit = values => {\n    var obj = {};\n    Object.keys(values).map((item, index) => {\n      if (typeof values[item] === \"object\" && \"value\" in values[item]) {\n        obj[item] = values[item].value;\n        return;\n      }\n\n      obj[item] = values[item];\n    });\n    getResults(_objectSpread(_objectSpread({}, datatable), obj));\n  }; // when search input in table\n\n\n  const searchTable = e => {\n    var _e$target$value, _e$target, _e$target$value2, _e$target2;\n\n    setSearch((_e$target$value = (_e$target = e.target) === null || _e$target === void 0 ? void 0 : _e$target.value) !== null && _e$target$value !== void 0 ? _e$target$value : \"\");\n    getResults(_objectSpread(_objectSpread({}, datatable), {}, {\n      search: (_e$target$value2 = (_e$target2 = e.target) === null || _e$target2 === void 0 ? void 0 : _e$target2.value) !== null && _e$target$value2 !== void 0 ? _e$target$value2 : \"\"\n    }));\n  };\n\n  const dtSearchOpen = e => {\n    setIsSearchOpen(false);\n    getResults(_objectSpread(_objectSpread({}, datatable), {}, {\n      search: \"\"\n    }));\n  }; //For Download DataTable As Excel File\n\n\n  const excelIndir = () => {\n    var y = getRandomuserParams(_objectSpread({}, datatable));\n    apiServices.ExcelIndir(\"/GetBasvurularExcel\", _objectSpread({}, y)).then(response => {\n      const blob = new Blob([response.data], {\n        type: \"application/application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"\n      });\n      const downloadUrl = URL.createObjectURL(blob);\n      const a = document.createElement(\"a\");\n      a.href = downloadUrl;\n      a.download = \"Etkinlikler.xlsx\";\n      document.body.appendChild(a);\n      a.click();\n    });\n  }; // download item\n\n\n  const downloadItem = /*#__PURE__*/_jsx(Menu, {\n    children: /*#__PURE__*/_jsx(Menu.Item, {\n      children: /*#__PURE__*/_jsx(\"a\", {\n        href: \"javascript:void(0);\",\n        onClick: excelIndir,\n        children: \"Excel indir\"\n      })\n    })\n  });\n\n  const debouncedChangeHandler = useCallback(debounce(searchTable, 300), []); //Show or Hide Selected column\n\n  const {\n    0: colvisSetting,\n    1: setColvisSetting\n  } = useState({\n    value: false,\n    checkedColumns: [],\n    visibleMenuSettings: false,\n    columns: props.columns,\n    initialColumns: []\n  });\n  const {\n    0: arr,\n    1: setArr\n  } = useState([]);\n\n  const expandedRowRender = e => {\n    const columns = props.columns;\n    let type = [\"xxl\", \"xl\", \"lg\", \"md\", \"sm\", \"xs\"];\n    const responsiveMap = {\n      xs: 575,\n      sm: 576,\n      md: 768,\n      lg: 992,\n      xl: 1200,\n      xxl: 1600\n    };\n    columns.map((item, i) => {\n      let responsive = item.responsive;\n\n      if (responsive && type.map((v, i) => responsive[0] === v)) {\n        var s = responsiveMap[responsive[0]];\n\n        if (window.innerWidth < s) {\n          delete item[\"responsive\"];\n          arr.push(item);\n        }\n      }\n    });\n    return /*#__PURE__*/_jsx(Table, {\n      style: {\n        padding: \"30px\"\n      },\n      columns: arr,\n      dataSource: [e],\n      pagination: false\n    });\n  };\n\n  useEffect(() => {\n    setColvisSetting(_objectSpread(_objectSpread({}, colvisSetting), {}, {\n      initialColumns: colvisSetting.columns\n    }));\n  }, []);\n\n  const handleVisibleChange = flag => {\n    setColvisSetting(_objectSpread(_objectSpread({}, colvisSetting), {}, {\n      visibleMenuSettings: flag\n    }));\n  };\n\n  const onChange = e => {\n    var checkedColumns = colvisSetting.checkedColumns;\n\n    if (e.target.checked) {\n      checkedColumns = checkedColumns.filter(id => {\n        return id !== e.target.id;\n      });\n    } else if (!e.target.checked) {\n      var _checkedColumns;\n\n      (_checkedColumns = checkedColumns) === null || _checkedColumns === void 0 ? void 0 : _checkedColumns.push(e.target.id);\n    }\n\n    var filtered = colvisSetting.initialColumns;\n\n    for (var i = 0; i < checkedColumns.length; i++) {\n      var _filtered;\n\n      filtered = (_filtered = filtered) === null || _filtered === void 0 ? void 0 : _filtered.filter(el => {\n        return el.dataIndex !== checkedColumns[i];\n      });\n    }\n\n    setColvisSetting(_objectSpread(_objectSpread({}, colvisSetting), {}, {\n      columns: filtered,\n      checkedColumns: checkedColumns\n    }));\n  }; // // colvis item\n\n\n  const colvisItem = /*#__PURE__*/_jsx(Menu, {\n    children: /*#__PURE__*/_jsx(Menu.ItemGroup, {\n      children: props.columns.map((col, index) => /*#__PURE__*/_jsx(Menu.Item, {\n        children: /*#__PURE__*/_jsxs(Checkbox, {\n          id: col.dataIndex,\n          onChange: onChange,\n          defaultChecked: true,\n          children: [\" \", col.title, \" \"]\n        })\n      }, index))\n    })\n  });\n\n  return /*#__PURE__*/_jsxs(TableStyle, {\n    children: [/*#__PURE__*/_jsxs(Row, {\n      gutter: 16,\n      children: [/*#__PURE__*/_jsx(Col, {\n        className: \"gutter-row\",\n        span: 12,\n        children: /*#__PURE__*/_jsx(InputCustum, {\n          prefix: /*#__PURE__*/_jsx(SearchOutlined, {}),\n          onChange: debouncedChangeHandler,\n          placeholder: \"search\"\n        })\n      }), /*#__PURE__*/_jsx(Col, {\n        className: \"gutter-row\",\n        span: 12\n      })]\n    }), isFilterOpen && props.filtere ? /*#__PURE__*/_jsxs(_Fragment, {\n      children: [/*#__PURE__*/_jsx(\"hr\", {\n        style: {\n          color: \"#979191\"\n        }\n      }), /*#__PURE__*/_jsx(Form, {\n        form: form,\n        onFinish: filtereSubmit,\n        children: /*#__PURE__*/_jsxs(Row, {\n          justify: \"space-between\",\n          gutter: [16, 24],\n          children: [/*#__PURE__*/_jsx(Col, {\n            className: \"text-right gutter-row\",\n            span: 20,\n            children: props.filtere\n          }), /*#__PURE__*/_jsxs(Col, {\n            className: \"text-right gutter-row\",\n            span: 4,\n            children: [/*#__PURE__*/_jsx(ButtonCustum, {\n              type: \"dark\",\n              htmlType: \"submit\",\n              children: \"Raporla\"\n            }), /*#__PURE__*/_jsx(ButtonCustum, {\n              onClick: isFilter,\n              className: \"m-l-5\",\n              type: \"primary\",\n              children: /*#__PURE__*/_jsx(CloseOutlined, {})\n            })]\n          })]\n        })\n      })]\n    }) : \"\", /*#__PURE__*/_jsx(Table, {\n      size: \"small\",\n      columns: colvisSetting.columns,\n      style: {\n        width: \"100%\",\n        marginTop: 10\n      },\n      className: props.className,\n      dataSource: datatable.data,\n      pagination: datatable.pagination,\n      loading: loading,\n      onChange: handleTableChange // locale={tr_TR}\n      ,\n      expandable: props.responsive > window.innerWidth ? {\n        expandedRowRender\n      } : null,\n      rowSelection: rowSelection\n    })]\n  });\n};\n\nexport default TableCustum;","map":null,"metadata":{},"sourceType":"module"}