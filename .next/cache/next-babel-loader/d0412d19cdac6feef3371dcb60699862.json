{"ast":null,"code":"import { hundleResponse } from \"./hataYoetimi\";\nconst baseUrl = process.env.BASE_URL;\n\nconst getToken = () => {\n  return \"Bearer \" + window.localStorage.getItem(process.env.TOKEN_NAME);\n};\n\nexport const getData = async (url, token) => {\n  try {\n    const res = await fetch(`${baseUrl}${url}`, {\n      method: 'GET',\n      headers: {\n        'Authorization': token && getToken()\n      }\n    });\n\n    if (res.status != 200) {\n      throw res;\n    }\n\n    ;\n    const string = await res.text();\n    const data = string === \"\" ? {} : JSON.parse(string);\n    return data;\n  } catch (err) {\n    var res = hundleResponse(err);\n    throw res;\n  }\n};\nexport const postData = async (url, post, token) => {\n  try {\n    const res = await fetch(`${baseUrl}${url}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': token && getToken()\n      },\n      body: JSON.stringify(post)\n    });\n\n    if (res.status != 200) {\n      throw res;\n    }\n\n    ;\n    const string = await res.text();\n    const data = string === \"\" ? {} : JSON.parse(string);\n    return data;\n  } catch (err) {\n    var res = hundleResponse(err);\n    throw res;\n  }\n};\nexport const putData = async (url, post, token) => {\n  const res = await fetch(`${baseUrl}${url}`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': token\n    },\n    body: JSON.stringify(post)\n  });\n  const data = await res.json();\n  return data;\n};\nexport const patchData = async (url, post, token) => {\n  const res = await fetch(`${baseUrl}${url}`, {\n    method: 'PATCH',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': token\n    },\n    body: JSON.stringify(post)\n  });\n  const data = await res.json();\n  return data;\n};\nexport const deleteData = async (url, token) => {\n  const res = await fetch(`${baseUrl}${url}`, {\n    method: 'DELETE',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': token\n    }\n  });\n  const data = await res.json();\n  return data;\n};","map":null,"metadata":{},"sourceType":"module"}