{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nexports.__esModule = true;\nexports.noSSR = noSSR;\nexports[\"default\"] = dynamic;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _loadable = _interopRequireDefault(require(\"./loadable\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar isServerSide = false;\n\nfunction noSSR(LoadableInitializer, loadableOptions) {\n  // Removing webpack and modules means react-loadable won't try preloading\n  delete loadableOptions.webpack;\n  delete loadableOptions.modules; // This check is necessary to prevent react-loadable from initializing on the server\n\n  if (!isServerSide) {\n    return LoadableInitializer(loadableOptions);\n  }\n\n  var Loading = loadableOptions.loading; // This will only be rendered on the server side\n\n  return function () {\n    return /*#__PURE__*/_react[\"default\"].createElement(Loading, {\n      error: null,\n      isLoading: true,\n      pastDelay: false,\n      timedOut: false\n    });\n  };\n} // function dynamic<P = {}, O extends DynamicOptions>(options: O):\n\n\nfunction dynamic(dynamicOptions, options) {\n  var loadableFn = _loadable[\"default\"];\n  var loadableOptions = {\n    // A loading component is not required, so we default it\n    loading: function loading(_ref) {\n      var error = _ref.error,\n          isLoading = _ref.isLoading,\n          pastDelay = _ref.pastDelay;\n      if (!pastDelay) return null;\n\n      if (true) {\n        if (isLoading) {\n          return null;\n        }\n\n        if (error) {\n          return /*#__PURE__*/_react[\"default\"].createElement(\"p\", null, error.message, /*#__PURE__*/_react[\"default\"].createElement(\"br\", null), error.stack);\n        }\n      }\n\n      return null;\n    }\n  }; // Support for direct import(), eg: dynamic(import('../hello-world'))\n  // Note that this is only kept for the edge case where someone is passing in a promise as first argument\n  // The react-loadable babel plugin will turn dynamic(import('../hello-world')) into dynamic(() => import('../hello-world'))\n  // To make sure we don't execute the import without rendering first\n\n  if (dynamicOptions instanceof Promise) {\n    loadableOptions.loader = function () {\n      return dynamicOptions;\n    }; // Support for having import as a function, eg: dynamic(() => import('../hello-world'))\n\n  } else if (typeof dynamicOptions === 'function') {\n    loadableOptions.loader = dynamicOptions; // Support for having first argument being options, eg: dynamic({loader: import('../hello-world')})\n  } else if (typeof dynamicOptions === 'object') {\n    loadableOptions = _objectSpread(_objectSpread({}, loadableOptions), dynamicOptions);\n  } // Support for passing options, eg: dynamic(import('../hello-world'), {loading: () => <p>Loading something</p>})\n\n\n  loadableOptions = _objectSpread(_objectSpread({}, loadableOptions), options);\n\n  if (typeof dynamicOptions === 'object' && !(dynamicOptions instanceof Promise)) {\n    // show deprecation warning for `modules` key in development\n    if (true) {\n      if (dynamicOptions.modules) {\n        console.warn('The modules option for next/dynamic has been deprecated. See here for more info https://err.sh/vercel/next.js/next-dynamic-modules');\n      }\n    } // Support for `render` when using a mapping, eg: `dynamic({ modules: () => {return {HelloWorld: import('../hello-world')}, render(props, loaded) {} } })\n\n\n    if (dynamicOptions.render) {\n      loadableOptions.render = function (loaded, props) {\n        return dynamicOptions.render(props, loaded);\n      };\n    } // Support for `modules` when using a mapping, eg: `dynamic({ modules: () => {return {HelloWorld: import('../hello-world')}, render(props, loaded) {} } })\n\n\n    if (dynamicOptions.modules) {\n      loadableFn = _loadable[\"default\"].Map;\n      var loadModules = {};\n      var modules = dynamicOptions.modules();\n      Object.keys(modules).forEach(function (key) {\n        var value = modules[key];\n\n        if (typeof value.then === 'function') {\n          loadModules[key] = function () {\n            return value.then(function (mod) {\n              return mod[\"default\"] || mod;\n            });\n          };\n\n          return;\n        }\n\n        loadModules[key] = value;\n      });\n      loadableOptions.loader = loadModules;\n    }\n  } // coming from build/babel/plugins/react-loadable-plugin.js\n\n\n  if (loadableOptions.loadableGenerated) {\n    loadableOptions = _objectSpread(_objectSpread({}, loadableOptions), loadableOptions.loadableGenerated);\n    delete loadableOptions.loadableGenerated;\n  } // support for disabling server side rendering, eg: dynamic(import('../hello-world'), {ssr: false})\n\n\n  if (typeof loadableOptions.ssr === 'boolean') {\n    if (!loadableOptions.ssr) {\n      delete loadableOptions.ssr;\n      return noSSR(loadableFn, loadableOptions);\n    }\n\n    delete loadableOptions.ssr;\n  }\n\n  return loadableFn(loadableOptions);\n}","map":{"version":3,"sources":["../../../next-server/lib/dynamic.tsx"],"names":["isServerSide","loadableOptions","LoadableInitializer","Loading","loadableFn","Loadable","loading","error","dynamicOptions","console","loadModules","modules","Object","key","value","mod","noSSR"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Loadable from './loadable'\n\nconst isServerSide = typeof window === 'undefined'\n\nexport type LoaderComponent<P = {}> = Promise<\n  React.ComponentType<P> | { default: React.ComponentType<P> }\n>\n\nexport type Loader<P = {}> = (() => LoaderComponent<P>) | LoaderComponent<P>\n\nexport type LoaderMap = { [mdule: string]: () => Loader<any> }\n\nexport type LoadableGeneratedOptions = {\n  webpack?(): any\n  modules?(): LoaderMap\n}\n\nexport type LoadableBaseOptions<P = {}> = LoadableGeneratedOptions & {\n  loading?: ({\n    error,\n    isLoading,\n    pastDelay,\n  }: {\n    error?: Error | null\n    isLoading?: boolean\n    pastDelay?: boolean\n    retry?: () => void\n    timedOut?: boolean\n  }) => JSX.Element | null\n  loader?: Loader<P> | LoaderMap\n  loadableGenerated?: LoadableGeneratedOptions\n  ssr?: boolean\n}\n\nexport type LoadableOptions<P = {}> = LoadableBaseOptions<P> & {\n  render?(loader: any, props: any): JSX.Element\n}\n\nexport type DynamicOptions<P = {}> = LoadableBaseOptions<P> & {\n  /**\n   * @deprecated the modules option has been planned for removal\n   */\n  render?(props: P, loaded: any): JSX.Element\n}\n\nexport type LoadableFn<P = {}> = (\n  opts: LoadableOptions<P>\n) => React.ComponentType<P>\n\nexport type LoadableComponent<P = {}> = React.ComponentType<P>\n\nexport function noSSR<P = {}>(\n  LoadableInitializer: LoadableFn<P>,\n  loadableOptions: LoadableOptions<P>\n): React.ComponentType<P> {\n  // Removing webpack and modules means react-loadable won't try preloading\n  delete loadableOptions.webpack\n  delete loadableOptions.modules\n\n  // This check is necessary to prevent react-loadable from initializing on the server\n  if (!isServerSide) {\n    return LoadableInitializer(loadableOptions)\n  }\n\n  const Loading = loadableOptions.loading!\n  // This will only be rendered on the server side\n  return () => (\n    <Loading error={null} isLoading pastDelay={false} timedOut={false} />\n  )\n}\n\n// function dynamic<P = {}, O extends DynamicOptions>(options: O):\n\nexport default function dynamic<P = {}>(\n  dynamicOptions: DynamicOptions<P> | Loader<P>,\n  options?: DynamicOptions<P>\n): React.ComponentType<P> {\n  let loadableFn: LoadableFn<P> = Loadable\n  let loadableOptions: LoadableOptions<P> = {\n    // A loading component is not required, so we default it\n    loading: ({ error, isLoading, pastDelay }) => {\n      if (!pastDelay) return null\n      if (process.env.NODE_ENV === 'development') {\n        if (isLoading) {\n          return null\n        }\n        if (error) {\n          return (\n            <p>\n              {error.message}\n              <br />\n              {error.stack}\n            </p>\n          )\n        }\n      }\n\n      return null\n    },\n  }\n\n  // Support for direct import(), eg: dynamic(import('../hello-world'))\n  // Note that this is only kept for the edge case where someone is passing in a promise as first argument\n  // The react-loadable babel plugin will turn dynamic(import('../hello-world')) into dynamic(() => import('../hello-world'))\n  // To make sure we don't execute the import without rendering first\n  if (dynamicOptions instanceof Promise) {\n    loadableOptions.loader = () => dynamicOptions\n    // Support for having import as a function, eg: dynamic(() => import('../hello-world'))\n  } else if (typeof dynamicOptions === 'function') {\n    loadableOptions.loader = dynamicOptions\n    // Support for having first argument being options, eg: dynamic({loader: import('../hello-world')})\n  } else if (typeof dynamicOptions === 'object') {\n    loadableOptions = { ...loadableOptions, ...dynamicOptions }\n  }\n\n  // Support for passing options, eg: dynamic(import('../hello-world'), {loading: () => <p>Loading something</p>})\n  loadableOptions = { ...loadableOptions, ...options }\n\n  if (\n    typeof dynamicOptions === 'object' &&\n    !(dynamicOptions instanceof Promise)\n  ) {\n    // show deprecation warning for `modules` key in development\n    if (process.env.NODE_ENV !== 'production') {\n      if (dynamicOptions.modules) {\n        console.warn(\n          'The modules option for next/dynamic has been deprecated. See here for more info https://err.sh/vercel/next.js/next-dynamic-modules'\n        )\n      }\n    }\n    // Support for `render` when using a mapping, eg: `dynamic({ modules: () => {return {HelloWorld: import('../hello-world')}, render(props, loaded) {} } })\n    if (dynamicOptions.render) {\n      loadableOptions.render = (loaded, props) =>\n        dynamicOptions.render!(props, loaded)\n    }\n    // Support for `modules` when using a mapping, eg: `dynamic({ modules: () => {return {HelloWorld: import('../hello-world')}, render(props, loaded) {} } })\n    if (dynamicOptions.modules) {\n      loadableFn = Loadable.Map\n      const loadModules: LoaderMap = {}\n      const modules = dynamicOptions.modules()\n      Object.keys(modules).forEach((key) => {\n        const value: any = modules[key]\n        if (typeof value.then === 'function') {\n          loadModules[key] = () => value.then((mod: any) => mod.default || mod)\n          return\n        }\n        loadModules[key] = value\n      })\n      loadableOptions.loader = loadModules\n    }\n  }\n\n  // coming from build/babel/plugins/react-loadable-plugin.js\n  if (loadableOptions.loadableGenerated) {\n    loadableOptions = {\n      ...loadableOptions,\n      ...loadableOptions.loadableGenerated,\n    }\n    delete loadableOptions.loadableGenerated\n  }\n\n  // support for disabling server side rendering, eg: dynamic(import('../hello-world'), {ssr: false})\n  if (typeof loadableOptions.ssr === 'boolean') {\n    if (!loadableOptions.ssr) {\n      delete loadableOptions.ssr\n      return noSSR(loadableFn, loadableOptions)\n    }\n    delete loadableOptions.ssr\n  }\n\n  return loadableFn(loadableOptions)\n}\n"]},"metadata":{},"sourceType":"script"}