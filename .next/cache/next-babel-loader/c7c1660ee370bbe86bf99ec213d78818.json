{"ast":null,"code":"const baseUrl = process.env.BASE_URL;\nexport const getData = async (url, token) => {\n  const res = await fetch(`${baseUrl}/api/${url}`, {\n    method: 'GET',\n    headers: {\n      'Authorization': token\n    }\n  });\n\n  if (res.status != 200) {\n    const data = await res.text();\n    return data;\n  }\n\n  ;\n  const data = await res.json();\n  return data;\n};\nexport const postData = async (url, post, token) => {\n  const res = await fetch(`${baseUrl}${url}`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': token\n    },\n    body: JSON.stringify(post)\n  });\n\n  if (res.status != 200) {\n    const data = await res.text();\n    return data;\n  }\n\n  ;\n  const data = await res.json();\n  return data;\n};\nexport const putData = async (url, post, token) => {\n  const res = await fetch(`${baseUrl}/api/${url}`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': token\n    },\n    body: JSON.stringify(post)\n  });\n  const data = await res.json();\n  return data;\n};\nexport const patchData = async (url, post, token) => {\n  const res = await fetch(`${baseUrl}/api/${url}`, {\n    method: 'PATCH',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': token\n    },\n    body: JSON.stringify(post)\n  });\n  const data = await res.json();\n  return data;\n};\nexport const deleteData = async (url, token) => {\n  const res = await fetch(`${baseUrl}/api/${url}`, {\n    method: 'DELETE',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': token\n    }\n  });\n  const data = await res.json();\n  return data;\n};","map":{"version":3,"sources":["C:/Users/Abdulhekim abdullah/Desktop/News project/backend/NSiteApi/nextClient/utils/fetchData.js"],"names":["baseUrl","process","env","BASE_URL","getData","url","token","res","fetch","method","headers","status","data","text","json","postData","post","body","JSON","stringify","putData","patchData","deleteData"],"mappings":"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","sourcesContent":["const baseUrl = process.env.BASE_URL;\r\n\r\nexport const getData = async (url, token) => {\r\n    const res = await fetch(`${baseUrl}/api/${url}`, {\r\n        method: 'GET',\r\n        headers: {\r\n            'Authorization': token\r\n        }\r\n    })\r\n    if(res.status != 200) {\r\n        const data = await res.text()\r\n        return data;\r\n    };\r\n\r\n    const data = await res.json()\r\n    return data\r\n}\r\n\r\nexport const postData = async (url, post, token) => {\r\n    const res = await fetch(`${baseUrl}${url}`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        },\r\n        body: JSON.stringify(post)\r\n    });\r\n\r\n    if(res.status != 200) {\r\n        const data = await res.text()\r\n        return data;\r\n    };\r\n\r\n    const data = await res.json()\r\n    return data;\r\n}\r\n\r\n\r\n\r\nexport const putData = async (url, post, token) => {\r\n    const res = await fetch(`${baseUrl}/api/${url}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        },\r\n        body: JSON.stringify(post)\r\n    })\r\n\r\n    const data = await res.json()\r\n    return data\r\n}\r\n\r\nexport const patchData = async (url, post, token) => {\r\n    const res = await fetch(`${baseUrl}/api/${url}`, {\r\n        method: 'PATCH',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        },\r\n        body: JSON.stringify(post)\r\n    })\r\n\r\n    const data = await res.json()\r\n    return data\r\n}\r\n\r\n\r\nexport const deleteData = async (url, token) => {\r\n    const res = await fetch(`${baseUrl}/api/${url}`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        }\r\n    })\r\n\r\n    const data = await res.json()\r\n    return data\r\n}"]},"metadata":{},"sourceType":"module"}